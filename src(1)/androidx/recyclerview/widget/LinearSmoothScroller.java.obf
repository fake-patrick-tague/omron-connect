package androidx.recyclerview.widget;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.PointF;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.ViewGroup.MarginLayoutParams;
import android.view.animation.DecelerateInterpolator;
import android.view.animation.LinearInterpolator;

public class o
  extends RecyclerView.x
{
  protected final LinearInterpolator i = new LinearInterpolator();
  protected final DecelerateInterpolator j = new DecelerateInterpolator();
  protected PointF k;
  private final DisplayMetrics l;
  private boolean m = false;
  private float n;
  protected int o = 0;
  protected int p = 0;
  
  public o(Context paramContext)
  {
    l = paramContext.getResources().getDisplayMetrics();
  }
  
  private float A()
  {
    if (!m)
    {
      n = v(l);
      m = true;
    }
    return n;
  }
  
  private int y(int paramInt1, int paramInt2)
  {
    paramInt2 = paramInt1 - paramInt2;
    if (paramInt1 * paramInt2 <= 0) {
      return 0;
    }
    return paramInt2;
  }
  
  protected int B()
  {
    PointF localPointF = k;
    if (localPointF != null)
    {
      float f = y;
      if (f != 0.0F)
      {
        if (f > 0.0F) {
          return 1;
        }
        return -1;
      }
    }
    return 0;
  }
  
  protected void C(RecyclerView.x.a paramA)
  {
    PointF localPointF = a(f());
    if ((localPointF != null) && ((x != 0.0F) || (y != 0.0F)))
    {
      i(localPointF);
      k = localPointF;
      o = ((int)(x * 10000.0F));
      p = ((int)(y * 10000.0F));
      int i1 = x(10000);
      paramA.d((int)(o * 1.2F), (int)(p * 1.2F), (int)(i1 * 1.2F), i);
      return;
    }
    paramA.b(f());
    r();
  }
  
  protected void l(int paramInt1, int paramInt2, RecyclerView.y paramY, RecyclerView.x.a paramA)
  {
    if (c() == 0)
    {
      r();
      return;
    }
    o = y(o, paramInt1);
    paramInt1 = y(p, paramInt2);
    p = paramInt1;
    if ((o == 0) && (paramInt1 == 0)) {
      C(paramA);
    }
  }
  
  protected void m() {}
  
  protected void n()
  {
    p = 0;
    o = 0;
    k = null;
  }
  
  protected void o(View paramView, RecyclerView.y paramY, RecyclerView.x.a paramA)
  {
    int i1 = t(paramView, z());
    int i2 = u(paramView, B());
    int i3 = w((int)Math.sqrt(i1 * i1 + i2 * i2));
    if (i3 > 0) {
      paramA.d(-i1, -i2, i3, j);
    }
  }
  
  public int s(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    if (paramInt5 != -1)
    {
      if (paramInt5 != 0)
      {
        if (paramInt5 == 1) {
          return paramInt4 - paramInt2;
        }
        throw new IllegalArgumentException("snap preference should be one of the constants defined in SmoothScroller, starting with SNAP_");
      }
      paramInt1 = paramInt3 - paramInt1;
      if (paramInt1 > 0) {
        return paramInt1;
      }
      paramInt1 = paramInt4 - paramInt2;
      if (paramInt1 < 0) {
        return paramInt1;
      }
      return 0;
    }
    return paramInt3 - paramInt1;
  }
  
  public int t(View paramView, int paramInt)
  {
    RecyclerView.o localO = e();
    if ((localO != null) && (localO.H()))
    {
      RecyclerView.LayoutParams localLayoutParams = (RecyclerView.LayoutParams)paramView.getLayoutParams();
      return s(localO.n0(paramView) - leftMargin, localO.q0(paramView) + rightMargin, localO.v(), localO.H0() - localO.p(), paramInt);
    }
    return 0;
  }
  
  public int u(View paramView, int paramInt)
  {
    RecyclerView.o localO = e();
    if ((localO != null) && (localO.I()))
    {
      RecyclerView.LayoutParams localLayoutParams = (RecyclerView.LayoutParams)paramView.getLayoutParams();
      return s(localO.r0(paramView) - topMargin, localO.l0(paramView) + bottomMargin, localO.u(), localO.t0() - localO.a(), paramInt);
    }
    return 0;
  }
  
  protected float v(DisplayMetrics paramDisplayMetrics)
  {
    return 25.0F / densityDpi;
  }
  
  protected int w(int paramInt)
  {
    return (int)Math.ceil(x(paramInt) / 0.3356D);
  }
  
  protected int x(int paramInt)
  {
    return (int)Math.ceil(Math.abs(paramInt) * A());
  }
  
  protected int z()
  {
    PointF localPointF = k;
    if (localPointF != null)
    {
      float f = x;
      if (f != 0.0F)
      {
        if (f > 0.0F) {
          return 1;
        }
        return -1;
      }
    }
    return 0;
  }
}
