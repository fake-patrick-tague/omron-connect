package androidx.viewpager2.widget;

import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.MarginLayoutParams;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import androidx.recyclerview.widget.RecyclerView.o;
import androidx.recyclerview.widget.RecyclerView.s;
import java.util.Locale;

final class e
  extends RecyclerView.s
{
  private ViewPager2.i a;
  private final ViewPager2 b;
  private final RecyclerView c;
  private final LinearLayoutManager d;
  private int e;
  private int f;
  private a g;
  private int h;
  private int i;
  private boolean j;
  private boolean k;
  private boolean l;
  private boolean m;
  
  e(ViewPager2 paramViewPager2)
  {
    b = paramViewPager2;
    paramViewPager2 = l;
    c = paramViewPager2;
    d = ((LinearLayoutManager)paramViewPager2.getLayoutManager());
    g = new a();
    n();
  }
  
  private void c(int paramInt1, float paramFloat, int paramInt2)
  {
    ViewPager2.i localI = a;
    if (localI != null) {
      localI.b(paramInt1, paramFloat, paramInt2);
    }
  }
  
  private void d(int paramInt)
  {
    ViewPager2.i localI = a;
    if (localI != null) {
      localI.c(paramInt);
    }
  }
  
  private void e(int paramInt)
  {
    if ((e == 3) && (f == 0)) {
      return;
    }
    if (f == paramInt) {
      return;
    }
    f = paramInt;
    ViewPager2.i localI = a;
    if (localI != null) {
      localI.a(paramInt);
    }
  }
  
  private int f()
  {
    return d.w2();
  }
  
  private boolean k()
  {
    int n = e;
    boolean bool = true;
    if (n != 1)
    {
      if (n == 4) {
        return true;
      }
      bool = false;
    }
    return bool;
  }
  
  private void n()
  {
    e = 0;
    f = 0;
    g.a();
    h = -1;
    i = -1;
    j = false;
    k = false;
    m = false;
    l = false;
  }
  
  private void p(boolean paramBoolean)
  {
    m = paramBoolean;
    if (paramBoolean) {
      n = 4;
    } else {
      n = 1;
    }
    e = n;
    int n = i;
    if (n != -1)
    {
      h = n;
      i = -1;
    }
    else if (h == -1)
    {
      h = f();
    }
    e(1);
  }
  
  private void q()
  {
    a localA = g;
    int n = d.w2();
    a = n;
    if (n == -1)
    {
      localA.a();
      return;
    }
    View localView = d.Z(n);
    if (localView == null)
    {
      localA.a();
      return;
    }
    int i7 = d.x0(localView);
    int i6 = d.C0(localView);
    int i5 = d.F0(localView);
    int i4 = d.e0(localView);
    Object localObject = localView.getLayoutParams();
    int i2 = i7;
    int i1 = i6;
    n = i5;
    int i3 = i4;
    if ((localObject instanceof ViewGroup.MarginLayoutParams))
    {
      localObject = (ViewGroup.MarginLayoutParams)localObject;
      i2 = i7 + leftMargin;
      i1 = i6 + rightMargin;
      n = i5 + topMargin;
      i3 = i4 + bottomMargin;
    }
    i4 = localView.getHeight() + n + i3;
    i5 = localView.getWidth();
    if (d.K2() == 0) {
      i3 = 1;
    } else {
      i3 = 0;
    }
    if (i3 != 0)
    {
      i3 = localView.getLeft() - i2 - c.getPaddingLeft();
      n = i3;
      if (b.d()) {
        n = -i3;
      }
      i2 = i5 + i2 + i1;
      i1 = n;
      n = i2;
    }
    else
    {
      i1 = localView.getTop() - n - c.getPaddingTop();
      n = i4;
    }
    i1 = -i1;
    c = i1;
    if (i1 < 0)
    {
      if (new a(d).d()) {
        throw new IllegalStateException("Page(s) contain a ViewGroup with a LayoutTransition (or animateLayoutChanges=\"true\"), which interferes with the scrolling animation. Make sure to call getLayoutTransition().setAnimateParentHierarchy(false) on all ViewGroups with a LayoutTransition before an animation is started.");
      }
      throw new IllegalStateException(String.format(Locale.US, "Page can only be offset by a positive amount, not by %d", new Object[] { Integer.valueOf(c) }));
    }
    float f1;
    if (n == 0) {
      f1 = 0.0F;
    } else {
      f1 = i1 / n;
    }
    b = f1;
  }
  
  public void a(RecyclerView paramRecyclerView, int paramInt)
  {
    int n = e;
    int i1 = 1;
    if (((n != 1) || (f != 1)) && (paramInt == 1))
    {
      p(false);
      return;
    }
    if ((k()) && (paramInt == 2))
    {
      if (k)
      {
        e(2);
        j = true;
      }
      return;
    }
    if ((k()) && (paramInt == 0))
    {
      q();
      int i2;
      if (!k)
      {
        i2 = g.a;
        n = i1;
        if (i2 != -1)
        {
          c(i2, 0.0F, 0);
          n = i1;
        }
      }
      else
      {
        paramRecyclerView = g;
        if (c == 0)
        {
          i2 = h;
          int i3 = a;
          n = i1;
          if (i2 != i3)
          {
            d(i3);
            n = i1;
          }
        }
        else
        {
          n = 0;
        }
      }
      if (n != 0)
      {
        e(0);
        n();
      }
    }
    if ((e == 2) && (paramInt == 0) && (l))
    {
      q();
      paramRecyclerView = g;
      if (c == 0)
      {
        paramInt = i;
        n = a;
        if (paramInt != n)
        {
          paramInt = n;
          if (n == -1) {
            paramInt = 0;
          }
          d(paramInt);
        }
        e(0);
        n();
      }
    }
  }
  
  public void b(RecyclerView paramRecyclerView, int paramInt1, int paramInt2)
  {
    k = true;
    q();
    if (j)
    {
      j = false;
      if (paramInt2 <= 0) {
        if (paramInt2 == 0)
        {
          int n;
          if (paramInt1 < 0) {
            n = 1;
          } else {
            n = 0;
          }
          if (n == b.d()) {}
        }
        else
        {
          paramInt1 = 0;
          break label64;
        }
      }
      paramInt1 = 1;
      label64:
      if (paramInt1 != 0)
      {
        paramRecyclerView = g;
        if (c != 0)
        {
          paramInt1 = a + 1;
          break label98;
        }
      }
      paramInt1 = g.a;
      label98:
      i = paramInt1;
      if (h != paramInt1) {
        d(paramInt1);
      }
    }
    else if (e == 0)
    {
      paramInt2 = g.a;
      paramInt1 = paramInt2;
      if (paramInt2 == -1) {
        paramInt1 = 0;
      }
      d(paramInt1);
    }
    paramRecyclerView = g;
    paramInt2 = a;
    paramInt1 = paramInt2;
    if (paramInt2 == -1) {
      paramInt1 = 0;
    }
    c(paramInt1, b, c);
    paramRecyclerView = g;
    paramInt1 = a;
    paramInt2 = i;
    if (((paramInt1 == paramInt2) || (paramInt2 == -1)) && (c == 0) && (f != 1))
    {
      e(0);
      n();
    }
  }
  
  double g()
  {
    q();
    a localA = g;
    return a + b;
  }
  
  int h()
  {
    return f;
  }
  
  boolean i()
  {
    return m;
  }
  
  boolean j()
  {
    return f == 0;
  }
  
  void l()
  {
    l = true;
  }
  
  void m(int paramInt, boolean paramBoolean)
  {
    if (paramBoolean) {
      n = 2;
    } else {
      n = 3;
    }
    e = n;
    int n = 0;
    m = false;
    if (i != paramInt) {
      n = 1;
    }
    i = paramInt;
    e(2);
    if (n != 0) {
      d(paramInt);
    }
  }
  
  void o(ViewPager2.i paramI)
  {
    a = paramI;
  }
  
  private static final class a
  {
    int a;
    float b;
    int c;
    
    a() {}
    
    void a()
    {
      a = -1;
      b = 0.0F;
      c = 0;
    }
  }
}
