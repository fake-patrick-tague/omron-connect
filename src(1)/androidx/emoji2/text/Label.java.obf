package androidx.emoji2.text;

import android.text.Editable;
import android.text.Selection;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.Spanned;
import android.text.method.MetaKeyKeyListener;
import android.view.KeyEvent;
import android.view.inputmethod.InputConnection;
import java.util.Arrays;

final class i
{
  private final g.i a;
  private final m b;
  private g.d c;
  private final boolean d;
  private final int[] e;
  
  i(m paramM, g.i paramI, g.d paramD, boolean paramBoolean, int[] paramArrayOfInt)
  {
    a = paramI;
    b = paramM;
    c = paramD;
    d = paramBoolean;
    e = paramArrayOfInt;
  }
  
  private void a(Spannable paramSpannable, h paramH, int paramInt1, int paramInt2)
  {
    paramSpannable.setSpan(a.a(paramH), paramInt1, paramInt2, 33);
  }
  
  private static boolean b(Editable paramEditable, KeyEvent paramKeyEvent, boolean paramBoolean)
  {
    if (g(paramKeyEvent)) {
      return false;
    }
    int j = Selection.getSelectionStart(paramEditable);
    int i = Selection.getSelectionEnd(paramEditable);
    if (f(j, i)) {
      return false;
    }
    paramKeyEvent = (j[])paramEditable.getSpans(j, i, j.class);
    if ((paramKeyEvent != null) && (paramKeyEvent.length > 0))
    {
      int k = paramKeyEvent.length;
      i = 0;
      while (i < k)
      {
        Object localObject = paramKeyEvent[i];
        int m = paramEditable.getSpanStart(localObject);
        int n = paramEditable.getSpanEnd(localObject);
        if (((paramBoolean) && (m == j)) || ((!paramBoolean) && (n == j)) || ((j > m) && (j < n)))
        {
          paramEditable.delete(m, n);
          return true;
        }
        i += 1;
      }
    }
    return false;
  }
  
  static boolean c(InputConnection paramInputConnection, Editable paramEditable, int paramInt1, int paramInt2, boolean paramBoolean)
  {
    if (paramEditable != null)
    {
      if (paramInputConnection == null) {
        return false;
      }
      if (paramInt1 >= 0)
      {
        if (paramInt2 < 0) {
          return false;
        }
        int j = Selection.getSelectionStart(paramEditable);
        int i = Selection.getSelectionEnd(paramEditable);
        if (f(j, i)) {
          return false;
        }
        if (paramBoolean)
        {
          paramInt1 = a.a(paramEditable, j, Math.max(paramInt1, 0));
          i = a.b(paramEditable, i, Math.max(paramInt2, 0));
          if (paramInt1 != -1)
          {
            paramInt2 = i;
            if (i != -1) {}
          }
          else
          {
            return false;
          }
        }
        else
        {
          paramInt1 = Math.max(j - paramInt1, 0);
          paramInt2 = Math.min(i + paramInt2, paramEditable.length());
        }
        j[] arrayOfJ = (j[])paramEditable.getSpans(paramInt1, paramInt2, j.class);
        if ((arrayOfJ != null) && (arrayOfJ.length > 0))
        {
          int k = arrayOfJ.length;
          j = 0;
          i = paramInt1;
          paramInt1 = j;
          while (paramInt1 < k)
          {
            j localJ = arrayOfJ[paramInt1];
            int m = paramEditable.getSpanStart(localJ);
            j = paramEditable.getSpanEnd(localJ);
            i = Math.min(m, i);
            paramInt2 = Math.max(j, paramInt2);
            paramInt1 += 1;
          }
          paramInt1 = Math.max(i, 0);
          paramInt2 = Math.min(paramInt2, paramEditable.length());
          paramInputConnection.beginBatchEdit();
          paramEditable.delete(paramInt1, paramInt2);
          paramInputConnection.endBatchEdit();
          return true;
        }
      }
    }
    return false;
  }
  
  static boolean d(Editable paramEditable, int paramInt, KeyEvent paramKeyEvent)
  {
    boolean bool;
    if (paramInt != 67)
    {
      if (paramInt != 112) {
        bool = false;
      } else {
        bool = b(paramEditable, paramKeyEvent, true);
      }
    }
    else {
      bool = b(paramEditable, paramKeyEvent, false);
    }
    if (bool)
    {
      MetaKeyKeyListener.adjustMetaAfterKeypress(paramEditable);
      return true;
    }
    return false;
  }
  
  private boolean e(CharSequence paramCharSequence, int paramInt1, int paramInt2, h paramH)
  {
    if (paramH.d() == 0) {
      paramH.k(c.a(paramCharSequence, paramInt1, paramInt2, paramH.h()));
    }
    return paramH.d() == 2;
  }
  
  private static boolean f(int paramInt1, int paramInt2)
  {
    return (paramInt1 == -1) || (paramInt2 == -1) || (paramInt1 != paramInt2);
  }
  
  private static boolean g(KeyEvent paramKeyEvent)
  {
    return KeyEvent.metaStateHasNoModifiers(paramKeyEvent.getMetaState()) ^ true;
  }
  
  CharSequence h(CharSequence paramCharSequence, int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean)
  {
    boolean bool = paramCharSequence instanceof n;
    if (bool) {
      ((n)paramCharSequence).a();
    }
    Object localObject3 = null;
    if (!bool) {}
    for (;;)
    {
      int i;
      int n;
      try
      {
        Object localObject1;
        if (!(paramCharSequence instanceof Spannable))
        {
          localObject1 = localObject3;
          if ((paramCharSequence instanceof Spanned))
          {
            localObject1 = localObject3;
            if (((Spanned)paramCharSequence).nextSpanTransition(paramInt1 - 1, paramInt2 + 1, j.class) <= paramInt2) {
              localObject1 = new p(paramCharSequence);
            }
          }
        }
        else
        {
          localObject1 = new p((Spannable)paramCharSequence);
        }
        i = paramInt1;
        int j = paramInt2;
        int k;
        Object localObject4;
        if (localObject1 != null)
        {
          localObject3 = (j[])((p)localObject1).getSpans(paramInt1, paramInt2, j.class);
          i = paramInt1;
          j = paramInt2;
          if (localObject3 != null)
          {
            i = paramInt1;
            j = paramInt2;
            if (localObject3.length > 0)
            {
              m = localObject3.length;
              k = 0;
              i = paramInt1;
              j = paramInt2;
              if (k < m)
              {
                localObject4 = localObject3[k];
                j = ((p)localObject1).getSpanStart(localObject4);
                i = ((p)localObject1).getSpanEnd(localObject4);
                if (j != paramInt2) {
                  ((p)localObject1).removeSpan(localObject4);
                }
                paramInt1 = Math.min(j, paramInt1);
                paramInt2 = Math.max(i, paramInt2);
                k += 1;
                continue;
              }
            }
          }
        }
        if ((i != j) && (i < paramCharSequence.length()))
        {
          k = paramInt3;
          if (paramInt3 != Integer.MAX_VALUE)
          {
            k = paramInt3;
            if (localObject1 != null) {
              k = paramInt3 - ((j[])((p)localObject1).getSpans(0, ((p)localObject1).length(), j.class)).length;
            }
          }
          localObject4 = new b(b.f(), d, e);
          n = Character.codePointAt(paramCharSequence, i);
          paramInt3 = 0;
          break label672;
          if ((paramInt2 < j) && (paramInt3 < k))
          {
            i = ((b)localObject4).a(paramInt1);
            if (i != 1)
            {
              if (i != 2)
              {
                if (i != 3) {
                  continue;
                }
                if (!paramBoolean)
                {
                  n = paramInt1;
                  i = paramInt2;
                  if (e(paramCharSequence, m, paramInt2, ((b)localObject4).c())) {}
                }
                else
                {
                  localObject3 = localObject1;
                  if (localObject1 == null) {
                    localObject3 = new p(new SpannableString(paramCharSequence));
                  }
                  a((Spannable)localObject3, ((b)localObject4).c(), m, paramInt2);
                  paramInt3 += 1;
                  localObject1 = localObject3;
                  n = paramInt1;
                  i = paramInt2;
                }
              }
              else
              {
                i = paramInt2 + Character.charCount(paramInt1);
                paramInt2 = i;
                if (i >= j) {
                  continue;
                }
                paramInt1 = Character.codePointAt(paramCharSequence, i);
                paramInt2 = i;
              }
            }
            else
            {
              m += Character.charCount(Character.codePointAt(paramCharSequence, m));
              if (m >= j) {
                break label685;
              }
              paramInt1 = Character.codePointAt(paramCharSequence, m);
              break label685;
            }
          }
          else
          {
            localObject3 = localObject1;
            if (((b)localObject4).e())
            {
              localObject3 = localObject1;
              if (paramInt3 < k) {
                if (!paramBoolean)
                {
                  localObject3 = localObject1;
                  if (e(paramCharSequence, m, paramInt2, ((b)localObject4).b())) {}
                }
                else
                {
                  localObject3 = localObject1;
                  if (localObject1 == null) {
                    localObject3 = new p(paramCharSequence);
                  }
                  a((Spannable)localObject3, ((b)localObject4).b(), m, paramInt2);
                }
              }
            }
            if (localObject3 != null)
            {
              localObject1 = ((p)localObject3).b();
              return localObject1;
            }
            return paramCharSequence;
          }
        }
        else
        {
          return paramCharSequence;
        }
      }
      finally
      {
        if (bool) {
          ((n)paramCharSequence).d();
        }
      }
      label672:
      int m = i;
      paramInt1 = n;
      paramInt2 = i;
      continue;
      label685:
      paramInt2 = m;
    }
  }
  
  private static final class a
  {
    static int a(CharSequence paramCharSequence, int paramInt1, int paramInt2)
    {
      int i = paramCharSequence.length();
      if (paramInt1 >= 0)
      {
        if (i < paramInt1) {
          return -1;
        }
        if (paramInt2 < 0) {
          return -1;
        }
        i = 0;
        for (;;)
        {
          if (paramInt2 == 0) {
            return paramInt1;
          }
          paramInt1 -= 1;
          if (paramInt1 < 0)
          {
            if (i != 0) {
              return -1;
            }
            return 0;
          }
          char c = paramCharSequence.charAt(paramInt1);
          if (i != 0)
          {
            if (!Character.isHighSurrogate(c)) {
              return -1;
            }
            paramInt2 -= 1;
            break;
          }
          if (!Character.isSurrogate(c))
          {
            paramInt2 -= 1;
          }
          else
          {
            if (Character.isHighSurrogate(c)) {
              return -1;
            }
            i = 1;
          }
        }
      }
      return -1;
    }
    
    static int b(CharSequence paramCharSequence, int paramInt1, int paramInt2)
    {
      int j = paramCharSequence.length();
      if (paramInt1 >= 0)
      {
        if (j < paramInt1) {
          return -1;
        }
        if (paramInt2 < 0) {
          return -1;
        }
        int i = 0;
        for (;;)
        {
          if (paramInt2 == 0) {
            return paramInt1;
          }
          if (paramInt1 >= j)
          {
            if (i != 0) {
              return -1;
            }
            return j;
          }
          char c = paramCharSequence.charAt(paramInt1);
          if (i != 0)
          {
            if (!Character.isLowSurrogate(c)) {
              return -1;
            }
            paramInt2 -= 1;
            paramInt1 += 1;
            break;
          }
          if (!Character.isSurrogate(c))
          {
            paramInt2 -= 1;
            paramInt1 += 1;
          }
          else
          {
            if (Character.isLowSurrogate(c)) {
              return -1;
            }
            paramInt1 += 1;
            i = 1;
          }
        }
      }
      return -1;
    }
  }
  
  static final class b
  {
    private int a = 1;
    private final m.a b;
    private m.a c;
    private m.a d;
    private int e;
    private int f;
    private final boolean g;
    private final int[] h;
    
    b(m.a paramA, boolean paramBoolean, int[] paramArrayOfInt)
    {
      b = paramA;
      c = paramA;
      g = paramBoolean;
      h = paramArrayOfInt;
    }
    
    private static boolean d(int paramInt)
    {
      return paramInt == 65039;
    }
    
    private static boolean f(int paramInt)
    {
      return paramInt == 65038;
    }
    
    private int g()
    {
      a = 1;
      c = b;
      f = 0;
      return 1;
    }
    
    private boolean h()
    {
      if (c.b().j()) {
        return true;
      }
      if (d(e)) {
        return true;
      }
      if (g)
      {
        if (h == null) {
          return true;
        }
        int i = c.b().b(0);
        if (Arrays.binarySearch(h, i) < 0) {
          return true;
        }
      }
      return false;
    }
    
    int a(int paramInt)
    {
      m.a localA = c.a(paramInt);
      int j = a;
      int i = 3;
      if (j != 2)
      {
        if (localA == null)
        {
          i = g();
        }
        else
        {
          a = 2;
          c = localA;
          f = 1;
        }
      }
      else
      {
        do
        {
          for (;;)
          {
            i = 2;
            break label175;
            if (localA == null) {
              break;
            }
            c = localA;
            f += 1;
          }
          if (f(paramInt))
          {
            i = g();
            break;
          }
        } while (d(paramInt));
        if (c.b() != null)
        {
          if (f == 1)
          {
            if (h())
            {
              d = c;
              g();
            }
            else
            {
              i = g();
            }
          }
          else
          {
            d = c;
            g();
          }
        }
        else {
          i = g();
        }
      }
      label175:
      e = paramInt;
      return i;
    }
    
    h b()
    {
      return c.b();
    }
    
    h c()
    {
      return d.b();
    }
    
    boolean e()
    {
      int i = a;
      boolean bool = true;
      if ((i == 2) && (c.b() != null))
      {
        if (f > 1) {
          return bool;
        }
        if (h()) {
          return true;
        }
      }
      bool = false;
      return bool;
    }
  }
}
