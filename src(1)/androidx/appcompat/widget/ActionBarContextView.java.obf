package androidx.appcompat.widget;

import android.content.Context;
import android.text.TextUtils;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.ViewGroup.MarginLayoutParams;
import android.widget.LinearLayout;
import android.widget.TextView;
import c.a.a;
import c.a.j;
import c.a.n.b;
import c.h.q.f0;

public class ActionBarContextView
  extends f
{
  private CharSequence j;
  private CharSequence k;
  private View l;
  private View m;
  private View n;
  private LinearLayout o;
  private TextView p;
  private TextView q;
  private int r;
  private int s;
  private boolean t;
  private int u;
  
  public ActionBarContextView(Context paramContext)
  {
    this(paramContext, null);
  }
  
  public ActionBarContextView(Context paramContext, AttributeSet paramAttributeSet)
  {
    this(paramContext, paramAttributeSet, a.j);
  }
  
  public ActionBarContextView(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
    paramContext = n0.v(paramContext, paramAttributeSet, j.y, paramInt, 0);
    f0.t0(this, paramContext.g(j.z));
    r = paramContext.n(j.D, 0);
    s = paramContext.n(j.C, 0);
    f = paramContext.m(j.B, 0);
    u = paramContext.n(j.A, c.a.g.d);
    paramContext.w();
  }
  
  private void i()
  {
    if (o == null)
    {
      LayoutInflater.from(getContext()).inflate(c.a.g.a, this);
      localObject = (LinearLayout)getChildAt(getChildCount() - 1);
      o = ((LinearLayout)localObject);
      p = ((TextView)((LinearLayout)localObject).findViewById(c.a.f.e));
      q = ((TextView)o.findViewById(c.a.f.d));
      if (r != 0) {
        p.setTextAppearance(getContext(), r);
      }
      if (s != 0) {
        q.setTextAppearance(getContext(), s);
      }
    }
    p.setText(j);
    q.setText(k);
    boolean bool2 = TextUtils.isEmpty(j);
    boolean bool1 = TextUtils.isEmpty(k) ^ true;
    Object localObject = q;
    int i1 = 0;
    if (bool1) {
      i = 0;
    } else {
      i = 8;
    }
    ((TextView)localObject).setVisibility(i);
    localObject = o;
    int i = i1;
    if (!(bool2 ^ true)) {
      if (bool1) {
        i = i1;
      } else {
        i = 8;
      }
    }
    ((LinearLayout)localObject).setVisibility(i);
    if (o.getParent() == null) {
      addView(o);
    }
  }
  
  public void g()
  {
    if (l == null) {
      k();
    }
  }
  
  protected ViewGroup.LayoutParams generateDefaultLayoutParams()
  {
    return new ViewGroup.MarginLayoutParams(-1, -2);
  }
  
  public ViewGroup.LayoutParams generateLayoutParams(AttributeSet paramAttributeSet)
  {
    return new ViewGroup.MarginLayoutParams(getContext(), paramAttributeSet);
  }
  
  public CharSequence getSubtitle()
  {
    return k;
  }
  
  public CharSequence getTitle()
  {
    return j;
  }
  
  public void h(final b paramB)
  {
    Object localObject = l;
    if (localObject == null)
    {
      localObject = LayoutInflater.from(getContext()).inflate(u, this, false);
      l = ((View)localObject);
      addView((View)localObject);
    }
    else if (((View)localObject).getParent() == null)
    {
      addView(l);
    }
    localObject = l.findViewById(c.a.f.i);
    m = ((View)localObject);
    ((View)localObject).setOnClickListener(new a(paramB));
    paramB = (androidx.appcompat.view.menu.g)paramB.e();
    localObject = e;
    if (localObject != null) {
      ((ActionMenuPresenter)localObject).A();
    }
    localObject = new ActionMenuPresenter(getContext());
    e = ((ActionMenuPresenter)localObject);
    ((ActionMenuPresenter)localObject).L(true);
    localObject = new ViewGroup.LayoutParams(-2, -1);
    paramB.c(e, c);
    paramB = (ActionMenuView)e.q(this);
    d = paramB;
    f0.t0(paramB, null);
    addView(d, (ViewGroup.LayoutParams)localObject);
  }
  
  public boolean j()
  {
    return t;
  }
  
  public void k()
  {
    removeAllViews();
    n = null;
    d = null;
    e = null;
    View localView = m;
    if (localView != null) {
      localView.setOnClickListener(null);
    }
  }
  
  public boolean l()
  {
    ActionMenuPresenter localActionMenuPresenter = e;
    if (localActionMenuPresenter != null) {
      return localActionMenuPresenter.M();
    }
    return false;
  }
  
  public void onDetachedFromWindow()
  {
    super.onDetachedFromWindow();
    ActionMenuPresenter localActionMenuPresenter = e;
    if (localActionMenuPresenter != null)
    {
      localActionMenuPresenter.D();
      e.E();
    }
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    paramBoolean = t0.b(this);
    int i;
    if (paramBoolean) {
      i = paramInt3 - paramInt1 - getPaddingRight();
    } else {
      i = getPaddingLeft();
    }
    int i1 = getPaddingTop();
    int i2 = paramInt4 - paramInt2 - getPaddingTop() - getPaddingBottom();
    Object localObject = l;
    paramInt2 = i;
    if (localObject != null)
    {
      paramInt2 = i;
      if (((View)localObject).getVisibility() != 8)
      {
        localObject = (ViewGroup.MarginLayoutParams)l.getLayoutParams();
        if (paramBoolean) {
          paramInt2 = rightMargin;
        } else {
          paramInt2 = leftMargin;
        }
        if (paramBoolean) {
          paramInt4 = leftMargin;
        } else {
          paramInt4 = rightMargin;
        }
        paramInt2 = f.d(i, paramInt2, paramBoolean);
        paramInt2 = f.d(paramInt2 + e(l, paramInt2, i1, i2, paramBoolean), paramInt4, paramBoolean);
      }
    }
    localObject = o;
    paramInt4 = paramInt2;
    if (localObject != null)
    {
      paramInt4 = paramInt2;
      if (n == null)
      {
        paramInt4 = paramInt2;
        if (((LinearLayout)localObject).getVisibility() != 8) {
          paramInt4 = paramInt2 + e(o, paramInt2, i1, i2, paramBoolean);
        }
      }
    }
    localObject = n;
    if (localObject != null) {
      e((View)localObject, paramInt4, i1, i2, paramBoolean);
    }
    if (paramBoolean) {
      paramInt1 = getPaddingLeft();
    } else {
      paramInt1 = paramInt3 - paramInt1 - getPaddingRight();
    }
    localObject = d;
    if (localObject != null) {
      e((View)localObject, paramInt1, i1, i2, paramBoolean ^ true);
    }
  }
  
  protected void onMeasure(int paramInt1, int paramInt2)
  {
    int i = View.MeasureSpec.getMode(paramInt1);
    int i2 = 1073741824;
    if (i == 1073741824)
    {
      if (View.MeasureSpec.getMode(paramInt2) != 0)
      {
        int i5 = View.MeasureSpec.getSize(paramInt1);
        i = f;
        if (i <= 0) {
          i = View.MeasureSpec.getSize(paramInt2);
        }
        int i6 = getPaddingTop() + getPaddingBottom();
        paramInt1 = i5 - getPaddingLeft() - getPaddingRight();
        int i4 = i - i6;
        int i1 = View.MeasureSpec.makeMeasureSpec(i4, Integer.MIN_VALUE);
        localObject = l;
        int i3 = 0;
        paramInt2 = paramInt1;
        if (localObject != null)
        {
          paramInt1 = c((View)localObject, paramInt1, i1, 0);
          localObject = (ViewGroup.MarginLayoutParams)l.getLayoutParams();
          paramInt2 = paramInt1 - (leftMargin + rightMargin);
        }
        localObject = d;
        paramInt1 = paramInt2;
        if (localObject != null)
        {
          paramInt1 = paramInt2;
          if (((ViewGroup)localObject).getParent() == this) {
            paramInt1 = c(d, paramInt2, i1, 0);
          }
        }
        localObject = o;
        paramInt2 = paramInt1;
        int i7;
        if (localObject != null)
        {
          paramInt2 = paramInt1;
          if (n == null) {
            if (t)
            {
              paramInt2 = View.MeasureSpec.makeMeasureSpec(0, 0);
              o.measure(paramInt2, i1);
              i7 = o.getMeasuredWidth();
              if (i7 <= paramInt1) {
                i1 = 1;
              } else {
                i1 = 0;
              }
              paramInt2 = paramInt1;
              if (i1 != 0) {
                paramInt2 = paramInt1 - i7;
              }
              localObject = o;
              if (i1 != 0) {
                paramInt1 = 0;
              } else {
                paramInt1 = 8;
              }
              ((LinearLayout)localObject).setVisibility(paramInt1);
            }
            else
            {
              paramInt2 = c((View)localObject, paramInt1, i1, 0);
            }
          }
        }
        localObject = n;
        if (localObject != null)
        {
          localObject = ((View)localObject).getLayoutParams();
          i7 = width;
          if (i7 != -2) {
            paramInt1 = 1073741824;
          } else {
            paramInt1 = Integer.MIN_VALUE;
          }
          i1 = paramInt2;
          if (i7 >= 0) {
            i1 = Math.min(i7, paramInt2);
          }
          i7 = height;
          if (i7 != -2) {
            paramInt2 = i2;
          } else {
            paramInt2 = Integer.MIN_VALUE;
          }
          i2 = i4;
          if (i7 >= 0) {
            i2 = Math.min(i7, i4);
          }
          n.measure(View.MeasureSpec.makeMeasureSpec(i1, paramInt1), View.MeasureSpec.makeMeasureSpec(i2, paramInt2));
        }
        if (f <= 0)
        {
          i2 = getChildCount();
          paramInt2 = 0;
          paramInt1 = i3;
          while (paramInt1 < i2)
          {
            i1 = getChildAt(paramInt1).getMeasuredHeight() + i6;
            i = paramInt2;
            if (i1 > paramInt2) {
              i = i1;
            }
            paramInt1 += 1;
            paramInt2 = i;
          }
          setMeasuredDimension(i5, paramInt2);
          return;
        }
        setMeasuredDimension(i5, i);
        return;
      }
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append(getClass().getSimpleName());
      ((StringBuilder)localObject).append(" can only be used with android:layout_height=\"wrap_content\"");
      throw new IllegalStateException(((StringBuilder)localObject).toString());
    }
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append(getClass().getSimpleName());
    ((StringBuilder)localObject).append(" can only be used with android:layout_width=\"match_parent\" (or fill_parent)");
    throw new IllegalStateException(((StringBuilder)localObject).toString());
  }
  
  public void setContentHeight(int paramInt)
  {
    f = paramInt;
  }
  
  public void setCustomView(View paramView)
  {
    Object localObject = n;
    if (localObject != null) {
      removeView((View)localObject);
    }
    n = paramView;
    if (paramView != null)
    {
      localObject = o;
      if (localObject != null)
      {
        removeView((View)localObject);
        o = null;
      }
    }
    if (paramView != null) {
      addView(paramView);
    }
    requestLayout();
  }
  
  public void setSubtitle(CharSequence paramCharSequence)
  {
    k = paramCharSequence;
    i();
  }
  
  public void setTitle(CharSequence paramCharSequence)
  {
    j = paramCharSequence;
    i();
    f0.s0(this, paramCharSequence);
  }
  
  public void setTitleOptional(boolean paramBoolean)
  {
    if (paramBoolean != t) {
      requestLayout();
    }
    t = paramBoolean;
  }
  
  public boolean shouldDelayChildPressedState()
  {
    return false;
  }
  
  class a
    implements View.OnClickListener
  {
    a(b paramB) {}
    
    public void onClick(View paramView)
    {
      paramB.c();
    }
  }
}
