package androidx.appcompat.widget;

import android.content.Context;
import android.content.res.ColorStateList;
import android.graphics.PorterDuff.Mode;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.view.ActionMode.Callback;
import android.view.inputmethod.EditorInfo;
import android.view.inputmethod.InputConnection;
import android.widget.CheckedTextView;
import androidx.core.widget.k;
import c.h.q.e0;

public class AppCompatCheckedTextView
  extends CheckedTextView
  implements k, e0, androidx.core.widget.m
{
  private final i b;
  private final h c;
  private final t d;
  private m e;
  
  public AppCompatCheckedTextView(Context paramContext, AttributeSet paramAttributeSet)
  {
    this(paramContext, paramAttributeSet, c.a.a.s);
  }
  
  public AppCompatCheckedTextView(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(k0.b(paramContext), paramAttributeSet, paramInt);
    i0.a(this, getContext());
    paramContext = new t(this);
    d = paramContext;
    paramContext.m(paramAttributeSet, paramInt);
    paramContext.b();
    paramContext = new h(this);
    c = paramContext;
    paramContext.e(paramAttributeSet, paramInt);
    paramContext = new i(this);
    b = paramContext;
    paramContext.d(paramAttributeSet, paramInt);
    getEmojiTextViewHelper().b(paramAttributeSet, paramInt);
  }
  
  private m getEmojiTextViewHelper()
  {
    if (e == null) {
      e = new m(this);
    }
    return e;
  }
  
  protected void drawableStateChanged()
  {
    super.drawableStateChanged();
    Object localObject = d;
    if (localObject != null) {
      ((t)localObject).b();
    }
    localObject = c;
    if (localObject != null) {
      ((h)localObject).b();
    }
    localObject = b;
    if (localObject != null) {
      ((i)localObject).a();
    }
  }
  
  public ActionMode.Callback getCustomSelectionActionModeCallback()
  {
    return androidx.core.widget.i.s(super.getCustomSelectionActionModeCallback());
  }
  
  public ColorStateList getSupportBackgroundTintList()
  {
    h localH = c;
    if (localH != null) {
      return localH.c();
    }
    return null;
  }
  
  public PorterDuff.Mode getSupportBackgroundTintMode()
  {
    h localH = c;
    if (localH != null) {
      return localH.d();
    }
    return null;
  }
  
  public ColorStateList getSupportCheckMarkTintList()
  {
    i localI = b;
    if (localI != null) {
      return localI.b();
    }
    return null;
  }
  
  public PorterDuff.Mode getSupportCheckMarkTintMode()
  {
    i localI = b;
    if (localI != null) {
      return localI.c();
    }
    return null;
  }
  
  public ColorStateList getSupportCompoundDrawablesTintList()
  {
    return d.j();
  }
  
  public PorterDuff.Mode getSupportCompoundDrawablesTintMode()
  {
    return d.k();
  }
  
  public InputConnection onCreateInputConnection(EditorInfo paramEditorInfo)
  {
    return n.a(super.onCreateInputConnection(paramEditorInfo), paramEditorInfo, this);
  }
  
  public void setAllCaps(boolean paramBoolean)
  {
    super.setAllCaps(paramBoolean);
    getEmojiTextViewHelper().c(paramBoolean);
  }
  
  public void setBackgroundDrawable(Drawable paramDrawable)
  {
    super.setBackgroundDrawable(paramDrawable);
    h localH = c;
    if (localH != null) {
      localH.f(paramDrawable);
    }
  }
  
  public void setBackgroundResource(int paramInt)
  {
    super.setBackgroundResource(paramInt);
    h localH = c;
    if (localH != null) {
      localH.g(paramInt);
    }
  }
  
  public void setCheckMarkDrawable(int paramInt)
  {
    setCheckMarkDrawable(c.a.k.a.a.b(getContext(), paramInt));
  }
  
  public void setCheckMarkDrawable(Drawable paramDrawable)
  {
    super.setCheckMarkDrawable(paramDrawable);
    paramDrawable = b;
    if (paramDrawable != null) {
      paramDrawable.e();
    }
  }
  
  public void setCompoundDrawables(Drawable paramDrawable1, Drawable paramDrawable2, Drawable paramDrawable3, Drawable paramDrawable4)
  {
    super.setCompoundDrawables(paramDrawable1, paramDrawable2, paramDrawable3, paramDrawable4);
    paramDrawable1 = d;
    if (paramDrawable1 != null) {
      paramDrawable1.p();
    }
  }
  
  public void setCompoundDrawablesRelative(Drawable paramDrawable1, Drawable paramDrawable2, Drawable paramDrawable3, Drawable paramDrawable4)
  {
    super.setCompoundDrawablesRelative(paramDrawable1, paramDrawable2, paramDrawable3, paramDrawable4);
    paramDrawable1 = d;
    if (paramDrawable1 != null) {
      paramDrawable1.p();
    }
  }
  
  public void setCustomSelectionActionModeCallback(ActionMode.Callback paramCallback)
  {
    super.setCustomSelectionActionModeCallback(androidx.core.widget.i.t(this, paramCallback));
  }
  
  public void setEmojiCompatEnabled(boolean paramBoolean)
  {
    getEmojiTextViewHelper().d(paramBoolean);
  }
  
  public void setSupportBackgroundTintList(ColorStateList paramColorStateList)
  {
    h localH = c;
    if (localH != null) {
      localH.i(paramColorStateList);
    }
  }
  
  public void setSupportBackgroundTintMode(PorterDuff.Mode paramMode)
  {
    h localH = c;
    if (localH != null) {
      localH.j(paramMode);
    }
  }
  
  public void setSupportCheckMarkTintList(ColorStateList paramColorStateList)
  {
    i localI = b;
    if (localI != null) {
      localI.f(paramColorStateList);
    }
  }
  
  public void setSupportCheckMarkTintMode(PorterDuff.Mode paramMode)
  {
    i localI = b;
    if (localI != null) {
      localI.g(paramMode);
    }
  }
  
  public void setSupportCompoundDrawablesTintList(ColorStateList paramColorStateList)
  {
    d.w(paramColorStateList);
    d.b();
  }
  
  public void setSupportCompoundDrawablesTintMode(PorterDuff.Mode paramMode)
  {
    d.x(paramMode);
    d.b();
  }
  
  public void setTextAppearance(Context paramContext, int paramInt)
  {
    super.setTextAppearance(paramContext, paramInt);
    t localT = d;
    if (localT != null) {
      localT.q(paramContext, paramInt);
    }
  }
}
