package androidx.appcompat.widget;

import android.content.Context;
import android.content.res.ColorStateList;
import android.graphics.Bitmap;
import android.graphics.PorterDuff.Mode;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.util.AttributeSet;
import android.widget.ImageView;
import androidx.core.widget.n;
import c.h.q.e0;

public class AppCompatImageView
  extends ImageView
  implements e0, n
{
  private final h b;
  private final o c;
  private boolean d = false;
  
  public AppCompatImageView(Context paramContext)
  {
    this(paramContext, null);
  }
  
  public AppCompatImageView(Context paramContext, AttributeSet paramAttributeSet)
  {
    this(paramContext, paramAttributeSet, 0);
  }
  
  public AppCompatImageView(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(k0.b(paramContext), paramAttributeSet, paramInt);
    i0.a(this, getContext());
    paramContext = new h(this);
    b = paramContext;
    paramContext.e(paramAttributeSet, paramInt);
    paramContext = new o(this);
    c = paramContext;
    paramContext.g(paramAttributeSet, paramInt);
  }
  
  protected void drawableStateChanged()
  {
    super.drawableStateChanged();
    Object localObject = b;
    if (localObject != null) {
      ((h)localObject).b();
    }
    localObject = c;
    if (localObject != null) {
      ((o)localObject).c();
    }
  }
  
  public ColorStateList getSupportBackgroundTintList()
  {
    h localH = b;
    if (localH != null) {
      return localH.c();
    }
    return null;
  }
  
  public PorterDuff.Mode getSupportBackgroundTintMode()
  {
    h localH = b;
    if (localH != null) {
      return localH.d();
    }
    return null;
  }
  
  public ColorStateList getSupportImageTintList()
  {
    o localO = c;
    if (localO != null) {
      return localO.d();
    }
    return null;
  }
  
  public PorterDuff.Mode getSupportImageTintMode()
  {
    o localO = c;
    if (localO != null) {
      return localO.e();
    }
    return null;
  }
  
  public boolean hasOverlappingRendering()
  {
    return (c.f()) && (super.hasOverlappingRendering());
  }
  
  public void setBackgroundDrawable(Drawable paramDrawable)
  {
    super.setBackgroundDrawable(paramDrawable);
    h localH = b;
    if (localH != null) {
      localH.f(paramDrawable);
    }
  }
  
  public void setBackgroundResource(int paramInt)
  {
    super.setBackgroundResource(paramInt);
    h localH = b;
    if (localH != null) {
      localH.g(paramInt);
    }
  }
  
  public void setImageBitmap(Bitmap paramBitmap)
  {
    super.setImageBitmap(paramBitmap);
    paramBitmap = c;
    if (paramBitmap != null) {
      paramBitmap.c();
    }
  }
  
  public void setImageDrawable(Drawable paramDrawable)
  {
    o localO = c;
    if ((localO != null) && (paramDrawable != null) && (!d)) {
      localO.h(paramDrawable);
    }
    super.setImageDrawable(paramDrawable);
    paramDrawable = c;
    if (paramDrawable != null)
    {
      paramDrawable.c();
      if (!d) {
        c.b();
      }
    }
  }
  
  public void setImageLevel(int paramInt)
  {
    super.setImageLevel(paramInt);
    d = true;
  }
  
  public void setImageResource(int paramInt)
  {
    o localO = c;
    if (localO != null) {
      localO.i(paramInt);
    }
  }
  
  public void setImageURI(Uri paramUri)
  {
    super.setImageURI(paramUri);
    paramUri = c;
    if (paramUri != null) {
      paramUri.c();
    }
  }
  
  public void setSupportBackgroundTintList(ColorStateList paramColorStateList)
  {
    h localH = b;
    if (localH != null) {
      localH.i(paramColorStateList);
    }
  }
  
  public void setSupportBackgroundTintMode(PorterDuff.Mode paramMode)
  {
    h localH = b;
    if (localH != null) {
      localH.j(paramMode);
    }
  }
  
  public void setSupportImageTintList(ColorStateList paramColorStateList)
  {
    o localO = c;
    if (localO != null) {
      localO.j(paramColorStateList);
    }
  }
  
  public void setSupportImageTintMode(PorterDuff.Mode paramMode)
  {
    o localO = c;
    if (localO != null) {
      localO.k(paramMode);
    }
  }
}
