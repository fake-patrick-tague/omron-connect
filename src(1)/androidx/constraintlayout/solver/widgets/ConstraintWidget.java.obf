package androidx.constraintlayout.solver.widgets;

import androidx.constraintlayout.solver.SolverVariable;
import androidx.constraintlayout.solver.widgets.analyzer.DependencyNode;
import androidx.constraintlayout.solver.widgets.analyzer.WidgetRun;
import androidx.constraintlayout.solver.widgets.analyzer.k;
import androidx.constraintlayout.solver.widgets.analyzer.m;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;

public class ConstraintWidget
{
  public static float a = 0.5F;
  float A = 1.0F;
  ConstraintWidget A0;
  private int[] B = { Integer.MAX_VALUE, Integer.MAX_VALUE };
  public int B0;
  private float C = 0.0F;
  public int C0;
  private boolean D = false;
  private boolean E;
  private boolean F = false;
  private int G = 0;
  private int H = 0;
  public ConstraintAnchor I = new ConstraintAnchor(this, ConstraintAnchor.Type.c);
  public ConstraintAnchor J = new ConstraintAnchor(this, ConstraintAnchor.Type.d);
  public ConstraintAnchor K = new ConstraintAnchor(this, ConstraintAnchor.Type.e);
  public ConstraintAnchor L = new ConstraintAnchor(this, ConstraintAnchor.Type.f);
  public ConstraintAnchor M = new ConstraintAnchor(this, ConstraintAnchor.Type.g);
  ConstraintAnchor N = new ConstraintAnchor(this, ConstraintAnchor.Type.i);
  ConstraintAnchor O = new ConstraintAnchor(this, ConstraintAnchor.Type.j);
  public ConstraintAnchor P;
  public ConstraintAnchor[] Q;
  protected ArrayList<ConstraintAnchor> R;
  private boolean[] S;
  public DimensionBehaviour[] T;
  public ConstraintWidget U;
  int V;
  int W;
  public float X;
  protected int Y;
  protected int Z;
  protected int a0;
  public boolean b = false;
  int b0;
  public WidgetRun[] c = new WidgetRun[2];
  int c0;
  public androidx.constraintlayout.solver.widgets.analyzer.c d;
  protected int d0;
  public androidx.constraintlayout.solver.widgets.analyzer.c e;
  protected int e0;
  public k f = null;
  int f0;
  public m g = null;
  protected int g0;
  public boolean[] h = { 1, 1 };
  protected int h0;
  boolean i = false;
  float i0;
  private boolean j = true;
  float j0;
  private boolean k = false;
  private Object k0;
  private boolean l = true;
  private int l0;
  private boolean m = false;
  private int m0;
  private boolean n = false;
  private String n0;
  public int o = -1;
  private String o0;
  public int p = -1;
  boolean p0;
  public int q = 0;
  boolean q0;
  public int r = 0;
  boolean r0;
  public int[] s = new int[2];
  int s0;
  public int t = 0;
  int t0;
  public int u = 0;
  boolean u0;
  public float v = 1.0F;
  boolean v0;
  public int w = 0;
  public float[] w0;
  public int x = 0;
  protected ConstraintWidget[] x0;
  public float y = 1.0F;
  protected ConstraintWidget[] y0;
  int z = -1;
  ConstraintWidget z0;
  
  public ConstraintWidget()
  {
    Object localObject = new ConstraintAnchor(this, ConstraintAnchor.Type.h);
    P = ((ConstraintAnchor)localObject);
    Q = new ConstraintAnchor[] { I, K, J, L, M, localObject };
    R = new ArrayList();
    S = new boolean[2];
    localObject = DimensionBehaviour.b;
    T = new DimensionBehaviour[] { localObject, localObject };
    U = null;
    V = 0;
    W = 0;
    X = 0.0F;
    Y = -1;
    Z = 0;
    a0 = 0;
    b0 = 0;
    c0 = 0;
    d0 = 0;
    e0 = 0;
    f0 = 0;
    float f1 = a;
    i0 = f1;
    j0 = f1;
    l0 = 0;
    m0 = 0;
    n0 = null;
    o0 = null;
    r0 = false;
    s0 = 0;
    t0 = 0;
    w0 = new float[] { -1.0F, -1.0F };
    x0 = new ConstraintWidget[] { null, null };
    y0 = new ConstraintWidget[] { null, null };
    z0 = null;
    A0 = null;
    B0 = -1;
    C0 = -1;
    d();
  }
  
  private boolean Y(int paramInt)
  {
    paramInt *= 2;
    ConstraintAnchor[] arrayOfConstraintAnchor = Q;
    if ((f != null) && (f.f != arrayOfConstraintAnchor[paramInt]))
    {
      paramInt += 1;
      if ((f != null) && (f.f == arrayOfConstraintAnchor[paramInt])) {
        return true;
      }
    }
    return false;
  }
  
  private void d()
  {
    R.add(I);
    R.add(J);
    R.add(K);
    R.add(L);
    R.add(N);
    R.add(O);
    R.add(P);
    R.add(M);
  }
  
  private void i(androidx.constraintlayout.solver.d paramD, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4, SolverVariable paramSolverVariable1, SolverVariable paramSolverVariable2, DimensionBehaviour paramDimensionBehaviour, boolean paramBoolean5, ConstraintAnchor paramConstraintAnchor1, ConstraintAnchor paramConstraintAnchor2, int paramInt1, int paramInt2, int paramInt3, int paramInt4, float paramFloat1, boolean paramBoolean6, boolean paramBoolean7, boolean paramBoolean8, boolean paramBoolean9, boolean paramBoolean10, int paramInt5, int paramInt6, int paramInt7, int paramInt8, float paramFloat2, boolean paramBoolean11)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: can not merge I and Z\n\tat com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.copyTypes(TypeTransformer.java:311)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.fixTypes(TypeTransformer.java:226)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:207)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\n");
  }
  
  public int A()
  {
    return G;
  }
  
  public void A0(int paramInt1, int paramInt2, int paramInt3, float paramFloat)
  {
    q = paramInt1;
    t = paramInt2;
    paramInt2 = paramInt3;
    if (paramInt3 == Integer.MAX_VALUE) {
      paramInt2 = 0;
    }
    u = paramInt2;
    v = paramFloat;
    if ((paramFloat > 0.0F) && (paramFloat < 1.0F) && (paramInt1 == 0)) {
      q = 2;
    }
  }
  
  public int B()
  {
    return H;
  }
  
  public void B0(float paramFloat)
  {
    w0[0] = paramFloat;
  }
  
  public int C(int paramInt)
  {
    if (paramInt == 0) {
      return R();
    }
    if (paramInt == 1) {
      return v();
    }
    return 0;
  }
  
  protected void C0(int paramInt, boolean paramBoolean)
  {
    S[paramInt] = paramBoolean;
  }
  
  public int D()
  {
    return B[1];
  }
  
  public void D0(boolean paramBoolean)
  {
    E = paramBoolean;
  }
  
  public int E()
  {
    return B[0];
  }
  
  public void E0(boolean paramBoolean)
  {
    F = paramBoolean;
  }
  
  public int F()
  {
    return h0;
  }
  
  public void F0(int paramInt1, int paramInt2)
  {
    G = paramInt1;
    H = paramInt2;
    I0(false);
  }
  
  public int G()
  {
    return g0;
  }
  
  public void G0(int paramInt)
  {
    B[1] = paramInt;
  }
  
  public ConstraintWidget H(int paramInt)
  {
    ConstraintAnchor localConstraintAnchor1;
    ConstraintAnchor localConstraintAnchor2;
    if (paramInt == 0)
    {
      localConstraintAnchor1 = K;
      localConstraintAnchor2 = f;
      if ((localConstraintAnchor2 != null) && (f == localConstraintAnchor1)) {
        return d;
      }
    }
    else if (paramInt == 1)
    {
      localConstraintAnchor1 = L;
      localConstraintAnchor2 = f;
      if ((localConstraintAnchor2 != null) && (f == localConstraintAnchor1)) {
        return d;
      }
    }
    return null;
  }
  
  public void H0(int paramInt)
  {
    B[0] = paramInt;
  }
  
  public ConstraintWidget I()
  {
    return U;
  }
  
  public void I0(boolean paramBoolean)
  {
    j = paramBoolean;
  }
  
  public ConstraintWidget J(int paramInt)
  {
    ConstraintAnchor localConstraintAnchor1;
    ConstraintAnchor localConstraintAnchor2;
    if (paramInt == 0)
    {
      localConstraintAnchor1 = I;
      localConstraintAnchor2 = f;
      if ((localConstraintAnchor2 != null) && (f == localConstraintAnchor1)) {
        return d;
      }
    }
    else if (paramInt == 1)
    {
      localConstraintAnchor1 = J;
      localConstraintAnchor2 = f;
      if ((localConstraintAnchor2 != null) && (f == localConstraintAnchor1)) {
        return d;
      }
    }
    return null;
  }
  
  public void J0(int paramInt)
  {
    if (paramInt < 0)
    {
      h0 = 0;
      return;
    }
    h0 = paramInt;
  }
  
  public int K()
  {
    return S() + V;
  }
  
  public void K0(int paramInt)
  {
    if (paramInt < 0)
    {
      g0 = 0;
      return;
    }
    g0 = paramInt;
  }
  
  public WidgetRun L(int paramInt)
  {
    if (paramInt == 0) {
      return f;
    }
    if (paramInt == 1) {
      return g;
    }
    return null;
  }
  
  public void L0(int paramInt1, int paramInt2)
  {
    Z = paramInt1;
    a0 = paramInt2;
  }
  
  public float M()
  {
    return j0;
  }
  
  public void M0(ConstraintWidget paramConstraintWidget)
  {
    U = paramConstraintWidget;
  }
  
  public int N()
  {
    return t0;
  }
  
  public void N0(float paramFloat)
  {
    j0 = paramFloat;
  }
  
  public DimensionBehaviour O()
  {
    return T[1];
  }
  
  public void O0(int paramInt)
  {
    t0 = paramInt;
  }
  
  public int P()
  {
    ConstraintAnchor localConstraintAnchor = I;
    int i1 = 0;
    if (localConstraintAnchor != null) {
      i1 = 0 + J.g;
    }
    int i2 = i1;
    if (K != null) {
      i2 = i1 + L.g;
    }
    return i2;
  }
  
  public void P0(int paramInt1, int paramInt2)
  {
    a0 = paramInt1;
    paramInt1 = paramInt2 - paramInt1;
    W = paramInt1;
    paramInt2 = h0;
    if (paramInt1 < paramInt2) {
      W = paramInt2;
    }
  }
  
  public int Q()
  {
    return m0;
  }
  
  public void Q0(DimensionBehaviour paramDimensionBehaviour)
  {
    T[1] = paramDimensionBehaviour;
  }
  
  public int R()
  {
    if (m0 == 8) {
      return 0;
    }
    return V;
  }
  
  public void R0(int paramInt1, int paramInt2, int paramInt3, float paramFloat)
  {
    r = paramInt1;
    w = paramInt2;
    paramInt2 = paramInt3;
    if (paramInt3 == Integer.MAX_VALUE) {
      paramInt2 = 0;
    }
    x = paramInt2;
    y = paramFloat;
    if ((paramFloat > 0.0F) && (paramFloat < 1.0F) && (paramInt1 == 0)) {
      r = 2;
    }
  }
  
  public int S()
  {
    ConstraintWidget localConstraintWidget = U;
    if ((localConstraintWidget != null) && ((localConstraintWidget instanceof d))) {
      return K0 + Z;
    }
    return Z;
  }
  
  public void S0(float paramFloat)
  {
    w0[1] = paramFloat;
  }
  
  public int T()
  {
    ConstraintWidget localConstraintWidget = U;
    if ((localConstraintWidget != null) && ((localConstraintWidget instanceof d))) {
      return L0 + a0;
    }
    return a0;
  }
  
  public void T0(int paramInt)
  {
    m0 = paramInt;
  }
  
  public boolean U()
  {
    return D;
  }
  
  public void U0(int paramInt)
  {
    V = paramInt;
    int i1 = g0;
    if (paramInt < i1) {
      V = i1;
    }
  }
  
  public boolean V(int paramInt)
  {
    int i1;
    if (paramInt == 0)
    {
      if (I.f != null) {
        paramInt = 1;
      } else {
        paramInt = 0;
      }
      if (K.f != null) {
        i1 = 1;
      } else {
        i1 = 0;
      }
      return paramInt + i1 < 2;
    }
    if (J.f != null) {
      paramInt = 1;
    } else {
      paramInt = 0;
    }
    if (L.f != null) {
      i1 = 1;
    } else {
      i1 = 0;
    }
    int i2;
    if (M.f != null) {
      i2 = 1;
    } else {
      i2 = 0;
    }
    return paramInt + i1 + i2 < 2;
  }
  
  public void V0(int paramInt)
  {
    Z = paramInt;
  }
  
  public boolean W()
  {
    int i2 = R.size();
    int i1 = 0;
    while (i1 < i2)
    {
      if (((ConstraintAnchor)R.get(i1)).l()) {
        return true;
      }
      i1 += 1;
    }
    return false;
  }
  
  public void W0(int paramInt)
  {
    a0 = paramInt;
  }
  
  public void X(ConstraintAnchor.Type paramType1, ConstraintWidget paramConstraintWidget, ConstraintAnchor.Type paramType2, int paramInt1, int paramInt2)
  {
    m(paramType1).a(paramConstraintWidget.m(paramType2), paramInt1, paramInt2, true);
  }
  
  public void X0(boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    if (z == -1) {
      if ((paramBoolean3) && (!paramBoolean4))
      {
        z = 0;
      }
      else if ((!paramBoolean3) && (paramBoolean4))
      {
        z = 1;
        if (Y == -1) {
          A = (1.0F / A);
        }
      }
    }
    if ((z == 0) && ((!J.n()) || (!L.n()))) {
      z = 1;
    } else if ((z == 1) && ((!I.n()) || (!K.n()))) {
      z = 0;
    }
    if ((z == -1) && ((!J.n()) || (!L.n()) || (!I.n()) || (!K.n()))) {
      if ((J.n()) && (L.n()))
      {
        z = 0;
      }
      else if ((I.n()) && (K.n()))
      {
        A = (1.0F / A);
        z = 1;
      }
    }
    if (z == -1)
    {
      int i1 = t;
      if ((i1 > 0) && (w == 0))
      {
        z = 0;
        return;
      }
      if ((i1 == 0) && (w > 0))
      {
        A = (1.0F / A);
        z = 1;
      }
    }
  }
  
  public void Y0(boolean paramBoolean1, boolean paramBoolean2)
  {
    boolean bool2 = paramBoolean1 & f.k();
    boolean bool1 = paramBoolean2 & g.k();
    k localK = f;
    int i1 = h.g;
    m localM = g;
    int i3 = h.g;
    int i4 = i.g;
    int i5 = i.g;
    int i2;
    if ((i4 - i1 >= 0) && (i5 - i3 >= 0) && (i1 != Integer.MIN_VALUE) && (i1 != Integer.MAX_VALUE) && (i3 != Integer.MIN_VALUE) && (i3 != Integer.MAX_VALUE) && (i4 != Integer.MIN_VALUE) && (i4 != Integer.MAX_VALUE) && (i5 != Integer.MIN_VALUE))
    {
      i2 = i5;
      if (i5 != Integer.MAX_VALUE) {}
    }
    else
    {
      i4 = 0;
      i1 = i4;
      i2 = i1;
      i3 = i2;
    }
    i4 -= i1;
    i2 -= i3;
    if (bool2) {
      Z = i1;
    }
    if (bool1) {
      a0 = i3;
    }
    if (m0 == 8)
    {
      V = 0;
      W = 0;
      return;
    }
    if (bool2)
    {
      i1 = i4;
      if (T[0] == DimensionBehaviour.b)
      {
        i3 = V;
        i1 = i4;
        if (i4 < i3) {
          i1 = i3;
        }
      }
      V = i1;
      i3 = g0;
      if (i1 < i3) {
        V = i3;
      }
    }
    if (bool1)
    {
      i1 = i2;
      if (T[1] == DimensionBehaviour.b)
      {
        i3 = W;
        i1 = i2;
        if (i2 < i3) {
          i1 = i3;
        }
      }
      W = i1;
      i2 = h0;
      if (i1 < i2) {
        W = i2;
      }
    }
  }
  
  public boolean Z()
  {
    ConstraintAnchor localConstraintAnchor1 = I;
    ConstraintAnchor localConstraintAnchor2 = f;
    if ((localConstraintAnchor2 == null) || (f != localConstraintAnchor1))
    {
      localConstraintAnchor1 = K;
      localConstraintAnchor2 = f;
    }
    return (localConstraintAnchor2 != null) && (f == localConstraintAnchor1);
  }
  
  public void Z0(androidx.constraintlayout.solver.d paramD, boolean paramBoolean)
  {
    int i2 = paramD.x(I);
    int i5 = paramD.x(J);
    int i4 = paramD.x(K);
    int i6 = paramD.x(L);
    int i3 = i2;
    int i1 = i4;
    Object localObject;
    if (paramBoolean)
    {
      localObject = f;
      i3 = i2;
      i1 = i4;
      if (localObject != null)
      {
        paramD = h;
        i3 = i2;
        i1 = i4;
        if (j)
        {
          localObject = i;
          i3 = i2;
          i1 = i4;
          if (j)
          {
            i3 = g;
            i1 = g;
          }
        }
      }
    }
    i4 = i5;
    i2 = i6;
    if (paramBoolean)
    {
      localObject = g;
      i4 = i5;
      i2 = i6;
      if (localObject != null)
      {
        paramD = h;
        i4 = i5;
        i2 = i6;
        if (j)
        {
          localObject = i;
          i4 = i5;
          i2 = i6;
          if (j)
          {
            i4 = g;
            i2 = g;
          }
        }
      }
    }
    if ((i1 - i3 >= 0) && (i2 - i4 >= 0) && (i3 != Integer.MIN_VALUE) && (i3 != Integer.MAX_VALUE) && (i4 != Integer.MIN_VALUE) && (i4 != Integer.MAX_VALUE) && (i1 != Integer.MIN_VALUE) && (i1 != Integer.MAX_VALUE) && (i2 != Integer.MIN_VALUE))
    {
      i5 = i3;
      i6 = i1;
      i3 = i2;
      if (i2 != Integer.MAX_VALUE) {}
    }
    else
    {
      i3 = 0;
      i1 = i3;
      i2 = i1;
      i6 = i2;
      i4 = i2;
      i5 = i1;
    }
    t0(i5, i4, i6, i3);
  }
  
  public boolean a0()
  {
    return E;
  }
  
  public boolean b0()
  {
    ConstraintAnchor localConstraintAnchor1 = J;
    ConstraintAnchor localConstraintAnchor2 = f;
    if ((localConstraintAnchor2 == null) || (f != localConstraintAnchor1))
    {
      localConstraintAnchor1 = L;
      localConstraintAnchor2 = f;
    }
    return (localConstraintAnchor2 != null) && (f == localConstraintAnchor1);
  }
  
  public boolean c0()
  {
    return F;
  }
  
  public boolean d0()
  {
    return (j) && (m0 != 8);
  }
  
  public void e(d paramD, androidx.constraintlayout.solver.d paramD1, HashSet<ConstraintWidget> paramHashSet, int paramInt, boolean paramBoolean)
  {
    if (paramBoolean)
    {
      if (!paramHashSet.contains(this)) {
        return;
      }
      h.a(paramD, paramD1, this);
      paramHashSet.remove(this);
      g(paramD1, paramD.B1(64));
    }
    Object localObject;
    if (paramInt == 0)
    {
      localObject = I.c();
      if (localObject != null)
      {
        localObject = ((HashSet)localObject).iterator();
        while (((Iterator)localObject).hasNext()) {
          nextd.e(paramD, paramD1, paramHashSet, paramInt, true);
        }
      }
      localObject = K.c();
      if (localObject != null)
      {
        localObject = ((HashSet)localObject).iterator();
        while (((Iterator)localObject).hasNext()) {
          nextd.e(paramD, paramD1, paramHashSet, paramInt, true);
        }
      }
    }
    else
    {
      localObject = J.c();
      if (localObject != null)
      {
        localObject = ((HashSet)localObject).iterator();
        while (((Iterator)localObject).hasNext()) {
          nextd.e(paramD, paramD1, paramHashSet, paramInt, true);
        }
      }
      localObject = L.c();
      if (localObject != null)
      {
        localObject = ((HashSet)localObject).iterator();
        while (((Iterator)localObject).hasNext()) {
          nextd.e(paramD, paramD1, paramHashSet, paramInt, true);
        }
      }
      localObject = M.c();
      if (localObject != null) {
        localObject = ((HashSet)localObject).iterator();
      }
    }
    for (;;)
    {
      ConstraintWidget localConstraintWidget;
      if (((Iterator)localObject).hasNext()) {
        localConstraintWidget = nextd;
      }
      try
      {
        localConstraintWidget.e(paramD, paramD1, paramHashSet, paramInt, true);
      }
      finally {}
    }
  }
  
  public boolean e0()
  {
    return (m) || ((I.m()) && (K.m()));
  }
  
  boolean f()
  {
    return ((this instanceof i)) || ((this instanceof e));
  }
  
  public boolean f0()
  {
    return (n) || ((J.m()) && (L.m()));
  }
  
  public void g(androidx.constraintlayout.solver.d paramD, boolean paramBoolean)
  {
    Object localObject3 = paramD.q(I);
    Object localObject2 = paramD.q(K);
    Object localObject5 = paramD.q(J);
    Object localObject7 = paramD.q(L);
    Object localObject6 = paramD.q(M);
    Object localObject1 = U;
    boolean bool2;
    boolean bool4;
    if (localObject1 != null)
    {
      if ((localObject1 != null) && (T[0] == DimensionBehaviour.c)) {
        bool1 = true;
      } else {
        bool1 = false;
      }
      if ((localObject1 != null) && (T[1] == DimensionBehaviour.c)) {
        bool2 = true;
      } else {
        bool2 = false;
      }
      bool4 = bool1;
    }
    else
    {
      bool4 = false;
      bool2 = bool4;
    }
    if ((m0 == 8) && (!W()))
    {
      localObject1 = S;
      if ((localObject1[0] == 0) && (localObject1[1] == 0)) {
        return;
      }
    }
    boolean bool1 = m;
    if ((bool1) || (n))
    {
      if (bool1)
      {
        paramD.f((SolverVariable)localObject3, Z);
        paramD.f((SolverVariable)localObject2, Z + V);
        if (bool4)
        {
          localObject1 = U;
          if (localObject1 != null) {
            if (l)
            {
              localObject1 = (d)localObject1;
              ((d)localObject1).n1(I);
              ((d)localObject1).h1(K);
            }
            else
            {
              paramD.h(paramD.q(K), (SolverVariable)localObject2, 0, 5);
            }
          }
        }
      }
      if (n)
      {
        paramD.f((SolverVariable)localObject5, a0);
        paramD.f((SolverVariable)localObject7, a0 + W);
        if (M.l()) {
          paramD.f((SolverVariable)localObject6, a0 + f0);
        }
        if (bool2)
        {
          localObject1 = U;
          if (localObject1 != null) {
            if (l)
            {
              localObject1 = (d)localObject1;
              ((d)localObject1).n1(J);
              ((d)localObject1).m1(L);
            }
            else
            {
              paramD.h(paramD.q(L), (SolverVariable)localObject7, 0, 5);
            }
          }
        }
      }
      if ((m) && (n))
      {
        m = false;
        n = false;
        return;
      }
    }
    localObject1 = androidx.constraintlayout.solver.d.g;
    if (localObject1 == null)
    {
      Object localObject4;
      Object localObject8;
      Object localObject9;
      if (paramBoolean)
      {
        localObject4 = f;
        if (localObject4 != null)
        {
          localObject8 = g;
          if (localObject8 != null)
          {
            localObject9 = h;
            if ((j) && (i.j) && (h.j) && (i.j))
            {
              if (localObject1 == null)
              {
                paramD.f((SolverVariable)localObject3, g);
                paramD.f((SolverVariable)localObject2, f.i.g);
                paramD.f((SolverVariable)localObject5, g.h.g);
                paramD.f((SolverVariable)localObject7, g.i.g);
                paramD.f((SolverVariable)localObject6, g.k.g);
                if (U != null)
                {
                  if ((bool4) && (h[0] != 0) && (!Z())) {
                    paramD.h(paramD.q(U.K), (SolverVariable)localObject2, 0, 8);
                  }
                  if ((bool2) && (h[1] != 0) && (!b0())) {
                    paramD.h(paramD.q(U.L), (SolverVariable)localObject7, 0, 8);
                  }
                }
                m = false;
                n = false;
                return;
              }
              throw null;
            }
          }
        }
      }
      if (localObject1 == null)
      {
        boolean bool3;
        boolean bool5;
        if (U != null)
        {
          if (Y(0))
          {
            ((d)U).e1(this, 0);
            bool1 = true;
          }
          else
          {
            bool1 = Z();
          }
          if (Y(1))
          {
            ((d)U).e1(this, 1);
            bool3 = true;
          }
          else
          {
            bool3 = b0();
          }
          if ((!bool1) && (bool4) && (m0 != 8) && (I.f == null) && (K.f == null)) {
            paramD.h(paramD.q(U.K), (SolverVariable)localObject2, 0, 1);
          }
          if ((!bool3) && (bool2) && (m0 != 8) && (J.f == null) && (L.f == null) && (M == null)) {
            paramD.h(paramD.q(U.L), (SolverVariable)localObject7, 0, 1);
          }
          bool5 = bool1;
        }
        else
        {
          bool3 = false;
          bool5 = bool3;
        }
        int i6 = V;
        int i2 = g0;
        if (i6 >= i2) {
          i2 = i6;
        }
        int i7 = W;
        int i1 = h0;
        if (i7 >= i1) {
          i1 = i7;
        }
        localObject4 = T;
        localObject1 = localObject4[0];
        DimensionBehaviour localDimensionBehaviour = DimensionBehaviour.d;
        if (localObject1 != localDimensionBehaviour) {
          bool1 = true;
        } else {
          bool1 = false;
        }
        if (localObject4[1] != localDimensionBehaviour) {
          bool6 = true;
        } else {
          bool6 = false;
        }
        int i8 = Y;
        z = i8;
        float f1 = X;
        A = f1;
        int i4 = q;
        int i5 = r;
        localObject1 = localObject2;
        int i3;
        if ((f1 > 0.0F) && (m0 != 8))
        {
          i3 = i4;
          if (localObject4[0] == localDimensionBehaviour)
          {
            i3 = i4;
            if (i4 == 0) {
              i3 = 3;
            }
          }
          i4 = i5;
          if (localObject4[1] == localDimensionBehaviour)
          {
            i4 = i5;
            if (i5 == 0) {
              i4 = 3;
            }
          }
          if ((localObject4[0] == localDimensionBehaviour) && (localObject4[1] == localDimensionBehaviour) && (i3 == 3) && (i4 == 3))
          {
            X0(bool4, bool2, bool1, bool6);
          }
          else
          {
            if ((localObject4[0] == localDimensionBehaviour) && (i3 == 3))
            {
              z = 0;
              i5 = (int)(f1 * i7);
              if (localObject4[1] != localDimensionBehaviour)
              {
                i2 = i4;
                i3 = 4;
                bool1 = false;
                i4 = i5;
                break label1336;
              }
              bool1 = true;
              i2 = i4;
              i4 = i5;
              break label1336;
            }
            if ((localObject4[1] == localDimensionBehaviour) && (i4 == 3))
            {
              z = 1;
              if (i8 == -1) {
                A = (1.0F / f1);
              }
              i1 = (int)(A * i6);
              if (localObject4[0] != localDimensionBehaviour)
              {
                bool1 = false;
                i5 = 4;
                i4 = i2;
                i2 = i5;
                break label1336;
              }
            }
          }
          i5 = i4;
          bool1 = true;
          i4 = i2;
          i2 = i5;
        }
        else
        {
          bool1 = false;
          i3 = i4;
          i4 = i2;
          i2 = i5;
        }
        label1336:
        localObject4 = s;
        localObject4[0] = i3;
        localObject4[1] = i2;
        i = bool1;
        if (bool1)
        {
          i5 = z;
          if ((i5 == 0) || (i5 == -1))
          {
            bool7 = true;
            break label1391;
          }
        }
        boolean bool7 = false;
        label1391:
        if (bool1)
        {
          i5 = z;
          if ((i5 == 1) || (i5 == -1))
          {
            bool6 = true;
            break label1423;
          }
        }
        boolean bool6 = false;
        label1423:
        localObject4 = T[0];
        Object localObject10 = DimensionBehaviour.c;
        if ((localObject4 == localObject10) && ((this instanceof d))) {
          bool8 = true;
        } else {
          bool8 = false;
        }
        if (bool8) {
          i4 = 0;
        }
        boolean bool10 = P.n() ^ true;
        localObject4 = S;
        int i11 = localObject4[0];
        int i10 = localObject4[1];
        ConstraintAnchor localConstraintAnchor1;
        if ((o != 2) && (!m))
        {
          if (paramBoolean)
          {
            localObject4 = f;
            if (localObject4 != null)
            {
              localObject8 = h;
              if ((j) && (i.j))
              {
                if (paramBoolean)
                {
                  paramD.f((SolverVariable)localObject3, g);
                  paramD.f((SolverVariable)localObject1, f.i.g);
                  if ((U != null) && (bool4) && (h[0] != 0) && (!Z())) {
                    paramD.h(paramD.q(U.K), (SolverVariable)localObject1, 0, 8);
                  }
                  break label1838;
                }
                break label1838;
              }
            }
          }
          localObject1 = U;
          if (localObject1 != null) {
            localObject1 = paramD.q(K);
          } else {
            localObject1 = null;
          }
          localObject4 = U;
          if (localObject4 != null) {
            localObject4 = paramD.q(I);
          } else {
            localObject4 = null;
          }
          int i12 = h[0];
          localObject8 = T;
          localObject9 = localObject8[0];
          localConstraintAnchor1 = I;
          ConstraintAnchor localConstraintAnchor2 = K;
          i5 = Z;
          i6 = g0;
          i7 = B[0];
          f1 = i0;
          boolean bool9;
          if (localObject8[1] == localDimensionBehaviour) {
            bool9 = true;
          } else {
            bool9 = false;
          }
          i(paramD, true, bool4, bool2, i12, (SolverVariable)localObject4, (SolverVariable)localObject1, (DimensionBehaviour)localObject9, bool8, localConstraintAnchor1, localConstraintAnchor2, i5, i4, i6, i7, f1, bool7, bool9, bool5, bool3, i11, i3, i2, t, u, v, bool10);
        }
        label1838:
        localObject1 = localObject7;
        localObject4 = localObject6;
        localObject6 = localObject3;
        boolean bool8 = bool2;
        localObject7 = localObject2;
        if (paramBoolean)
        {
          localObject2 = this;
          localObject3 = g;
          if (localObject3 != null)
          {
            localObject8 = h;
            if ((j) && (i.j))
            {
              i4 = g;
              localObject3 = paramD;
              ((androidx.constraintlayout.solver.d)localObject3).f((SolverVariable)localObject5, i4);
              i4 = g.i.g;
              localObject8 = localObject1;
              ((androidx.constraintlayout.solver.d)localObject3).f((SolverVariable)localObject8, i4);
              ((androidx.constraintlayout.solver.d)localObject3).f((SolverVariable)localObject4, g.k.g);
              localObject9 = U;
              if ((localObject9 != null) && (!bool3) && (bool8)) {
                if (h[1] != 0) {
                  ((androidx.constraintlayout.solver.d)localObject3).h(((androidx.constraintlayout.solver.d)localObject3).q(L), (SolverVariable)localObject8, 0, 8);
                } else {}
              }
              i4 = 0;
              break label2036;
            }
          }
        }
        i4 = 1;
        label2036:
        localObject8 = this;
        localObject9 = paramD;
        localObject2 = localObject5;
        localObject5 = localObject4;
        if (p == 2) {
          i4 = 0;
        }
        if ((i4 != 0) && (!n))
        {
          if ((T[1] == localObject10) && ((localObject8 instanceof d))) {
            paramBoolean = true;
          } else {
            paramBoolean = false;
          }
          if (paramBoolean) {
            i1 = 0;
          }
          localObject3 = U;
          if (localObject3 != null) {
            localObject3 = ((androidx.constraintlayout.solver.d)localObject9).q(L);
          } else {
            localObject3 = null;
          }
          localObject4 = U;
          if (localObject4 != null) {
            localObject4 = ((androidx.constraintlayout.solver.d)localObject9).q(J);
          } else {
            localObject4 = null;
          }
          if ((f0 > 0) || (m0 == 8))
          {
            if (M.f != null)
            {
              ((androidx.constraintlayout.solver.d)localObject9).e((SolverVariable)localObject5, (SolverVariable)localObject2, n(), 8);
              ((androidx.constraintlayout.solver.d)localObject9).e((SolverVariable)localObject5, ((androidx.constraintlayout.solver.d)localObject9).q(M.f), 0, 8);
              if (bool8) {
                ((androidx.constraintlayout.solver.d)localObject9).h((SolverVariable)localObject3, ((androidx.constraintlayout.solver.d)localObject9).q(L), 0, 5);
              }
              bool2 = false;
              break label2317;
            }
            if (m0 == 8) {
              ((androidx.constraintlayout.solver.d)localObject9).e((SolverVariable)localObject5, (SolverVariable)localObject2, 0, 8);
            } else {
              ((androidx.constraintlayout.solver.d)localObject9).e((SolverVariable)localObject5, (SolverVariable)localObject2, n(), 8);
            }
          }
          bool2 = bool10;
          label2317:
          int i9 = h[1];
          localObject5 = T;
          localObject9 = localObject5[1];
          localObject10 = J;
          localConstraintAnchor1 = L;
          i4 = a0;
          i5 = h0;
          i6 = B[1];
          f1 = j0;
          if (localObject5[0] == localDimensionBehaviour) {
            bool7 = true;
          } else {
            bool7 = false;
          }
          i(paramD, false, bool8, bool4, i9, (SolverVariable)localObject4, (SolverVariable)localObject3, (DimensionBehaviour)localObject9, paramBoolean, (ConstraintAnchor)localObject10, localConstraintAnchor1, i4, i1, i5, i6, f1, bool6, bool7, bool3, bool5, i10, i2, i3, w, x, y, bool2);
        }
        if (bool1)
        {
          localObject3 = this;
          if (z == 1) {
            paramD.k((SolverVariable)localObject1, (SolverVariable)localObject2, (SolverVariable)localObject7, (SolverVariable)localObject6, A, 8);
          } else {
            paramD.k((SolverVariable)localObject7, (SolverVariable)localObject6, (SolverVariable)localObject1, (SolverVariable)localObject2, A, 8);
          }
        }
        localObject1 = this;
        if (P.n()) {
          paramD.b((ConstraintWidget)localObject1, P.i().g(), (float)Math.toRadians(C + 90.0F), P.e());
        }
        m = false;
        n = false;
        return;
      }
      throw null;
    }
    throw null;
  }
  
  public boolean g0()
  {
    DimensionBehaviour[] arrayOfDimensionBehaviour = T;
    boolean bool2 = false;
    DimensionBehaviour localDimensionBehaviour1 = arrayOfDimensionBehaviour[0];
    DimensionBehaviour localDimensionBehaviour2 = DimensionBehaviour.d;
    boolean bool1 = bool2;
    if (localDimensionBehaviour1 == localDimensionBehaviour2)
    {
      bool1 = bool2;
      if (arrayOfDimensionBehaviour[1] == localDimensionBehaviour2) {
        bool1 = true;
      }
    }
    return bool1;
  }
  
  public boolean h()
  {
    return m0 != 8;
  }
  
  public void h0()
  {
    I.p();
    J.p();
    K.p();
    L.p();
    M.p();
    N.p();
    O.p();
    P.p();
    U = null;
    C = 0.0F;
    V = 0;
    W = 0;
    X = 0.0F;
    Y = -1;
    Z = 0;
    a0 = 0;
    d0 = 0;
    e0 = 0;
    f0 = 0;
    g0 = 0;
    h0 = 0;
    float f1 = a;
    i0 = f1;
    j0 = f1;
    Object localObject = T;
    DimensionBehaviour localDimensionBehaviour = DimensionBehaviour.b;
    localObject[0] = localDimensionBehaviour;
    localObject[1] = localDimensionBehaviour;
    k0 = null;
    l0 = 0;
    m0 = 0;
    o0 = null;
    p0 = false;
    q0 = false;
    s0 = 0;
    t0 = 0;
    u0 = false;
    v0 = false;
    localObject = w0;
    localObject[0] = -1.0F;
    localObject[1] = -1.0F;
    o = -1;
    p = -1;
    localObject = B;
    localObject[0] = Integer.MAX_VALUE;
    localObject[1] = Integer.MAX_VALUE;
    q = 0;
    r = 0;
    v = 1.0F;
    y = 1.0F;
    u = Integer.MAX_VALUE;
    x = Integer.MAX_VALUE;
    t = 0;
    w = 0;
    i = false;
    z = -1;
    A = 1.0F;
    r0 = false;
    localObject = h;
    localObject[0] = 1;
    localObject[1] = 1;
    F = false;
    localObject = S;
    localObject[0] = 0;
    localObject[1] = 0;
    j = true;
  }
  
  public void i0()
  {
    int i1 = 0;
    m = false;
    n = false;
    int i2 = R.size();
    while (i1 < i2)
    {
      ((ConstraintAnchor)R.get(i1)).q();
      i1 += 1;
    }
  }
  
  public void j(ConstraintWidget paramConstraintWidget, float paramFloat, int paramInt)
  {
    ConstraintAnchor.Type localType = ConstraintAnchor.Type.h;
    X(localType, paramConstraintWidget, localType, paramInt, 0);
    C = paramFloat;
  }
  
  public void j0(androidx.constraintlayout.solver.c paramC)
  {
    I.r(paramC);
    J.r(paramC);
    K.r(paramC);
    L.r(paramC);
    M.r(paramC);
    P.r(paramC);
    N.r(paramC);
    O.r(paramC);
  }
  
  public void k(androidx.constraintlayout.solver.d paramD)
  {
    paramD.q(I);
    paramD.q(J);
    paramD.q(K);
    paramD.q(L);
    if (f0 > 0) {
      paramD.q(M);
    }
  }
  
  public void k0(int paramInt)
  {
    f0 = paramInt;
    boolean bool;
    if (paramInt > 0) {
      bool = true;
    } else {
      bool = false;
    }
    D = bool;
  }
  
  public void l()
  {
    if (f == null) {
      f = new k(this);
    }
    if (g == null) {
      g = new m(this);
    }
  }
  
  public void l0(Object paramObject)
  {
    k0 = paramObject;
  }
  
  public ConstraintAnchor m(ConstraintAnchor.Type paramType)
  {
    switch (a.a[paramType.ordinal()])
    {
    default: 
      throw new AssertionError(paramType.name());
    case 9: 
      return null;
    case 8: 
      return O;
    case 7: 
      return N;
    case 6: 
      return P;
    case 5: 
      return M;
    case 4: 
      return L;
    case 3: 
      return K;
    case 2: 
      return J;
    }
    return I;
  }
  
  public void m0(String paramString)
  {
    n0 = paramString;
  }
  
  public int n()
  {
    return f0;
  }
  
  public void n0(String paramString)
  {
    int i1;
    int i2;
    String str;
    if ((paramString != null) && (paramString.length() != 0))
    {
      int i3 = -1;
      int i5 = paramString.length();
      int i6 = paramString.indexOf(',');
      int i4 = 0;
      i1 = i3;
      i2 = i4;
      if (i6 > 0)
      {
        i1 = i3;
        i2 = i4;
        if (i6 < i5 - 1)
        {
          str = paramString.substring(0, i6);
          if (str.equalsIgnoreCase("W"))
          {
            i1 = 0;
          }
          else
          {
            i1 = i3;
            if (str.equalsIgnoreCase("H")) {
              i1 = 1;
            }
          }
          i2 = i6 + 1;
        }
      }
      i3 = paramString.indexOf(':');
      if ((i3 >= 0) && (i3 < i5 - 1))
      {
        str = paramString.substring(i2, i3);
        paramString = paramString.substring(i3 + 1);
        if ((str.length() <= 0) || (paramString.length() <= 0)) {
          break label241;
        }
      }
    }
    try
    {
      f1 = Float.parseFloat(str);
      float f2 = Float.parseFloat(paramString);
      if ((f1 <= 0.0F) || (f2 <= 0.0F)) {
        break label241;
      }
      if (i1 == 1) {
        f1 = Math.abs(f2 / f1);
      } else {
        f1 = Math.abs(f1 / f2);
      }
    }
    catch (NumberFormatException paramString)
    {
      float f1;
      for (;;) {}
    }
    paramString = paramString.substring(i2);
    if (paramString.length() > 0) {
      f1 = Float.parseFloat(paramString);
    } else {
      label241:
      f1 = 0.0F;
    }
    if (f1 > 0.0F)
    {
      X = f1;
      Y = i1;
    }
    return;
    X = 0.0F;
  }
  
  public float o(int paramInt)
  {
    if (paramInt == 0) {
      return i0;
    }
    if (paramInt == 1) {
      return j0;
    }
    return -1.0F;
  }
  
  public void o0(int paramInt)
  {
    if (!D) {
      return;
    }
    int i1 = paramInt - f0;
    int i2 = W;
    a0 = i1;
    J.s(i1);
    L.s(i2 + i1);
    M.s(paramInt);
    n = true;
  }
  
  public int p()
  {
    return T() + W;
  }
  
  public void p0(int paramInt1, int paramInt2)
  {
    I.s(paramInt1);
    K.s(paramInt2);
    Z = paramInt1;
    V = (paramInt2 - paramInt1);
    m = true;
  }
  
  public Object q()
  {
    return k0;
  }
  
  public void q0(int paramInt)
  {
    I.s(paramInt);
    Z = paramInt;
  }
  
  public String r()
  {
    return n0;
  }
  
  public void r0(int paramInt)
  {
    J.s(paramInt);
    a0 = paramInt;
  }
  
  public DimensionBehaviour s(int paramInt)
  {
    if (paramInt == 0) {
      return y();
    }
    if (paramInt == 1) {
      return O();
    }
    return null;
  }
  
  public void s0(int paramInt1, int paramInt2)
  {
    J.s(paramInt1);
    L.s(paramInt2);
    a0 = paramInt1;
    W = (paramInt2 - paramInt1);
    if (D) {
      M.s(paramInt1 + f0);
    }
    n = true;
  }
  
  public float t()
  {
    return X;
  }
  
  public void t0(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    int i1 = paramInt3 - paramInt1;
    paramInt3 = paramInt4 - paramInt2;
    Z = paramInt1;
    a0 = paramInt2;
    if (m0 == 8)
    {
      V = 0;
      W = 0;
      return;
    }
    DimensionBehaviour[] arrayOfDimensionBehaviour = T;
    DimensionBehaviour localDimensionBehaviour1 = arrayOfDimensionBehaviour[0];
    DimensionBehaviour localDimensionBehaviour2 = DimensionBehaviour.b;
    paramInt1 = i1;
    if (localDimensionBehaviour1 == localDimensionBehaviour2)
    {
      paramInt2 = V;
      paramInt1 = i1;
      if (i1 < paramInt2) {
        paramInt1 = paramInt2;
      }
    }
    paramInt2 = paramInt3;
    if (arrayOfDimensionBehaviour[1] == localDimensionBehaviour2)
    {
      paramInt4 = W;
      paramInt2 = paramInt3;
      if (paramInt3 < paramInt4) {
        paramInt2 = paramInt4;
      }
    }
    V = paramInt1;
    W = paramInt2;
    paramInt3 = h0;
    if (paramInt2 < paramInt3) {
      W = paramInt3;
    }
    paramInt2 = g0;
    if (paramInt1 < paramInt2) {
      V = paramInt2;
    }
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    Object localObject = o0;
    String str = "";
    if (localObject != null)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("type: ");
      ((StringBuilder)localObject).append(o0);
      ((StringBuilder)localObject).append(" ");
      localObject = ((StringBuilder)localObject).toString();
    }
    else
    {
      localObject = "";
    }
    localStringBuilder.append((String)localObject);
    localObject = str;
    if (n0 != null)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("id: ");
      ((StringBuilder)localObject).append(n0);
      ((StringBuilder)localObject).append(" ");
      localObject = ((StringBuilder)localObject).toString();
    }
    localStringBuilder.append((String)localObject);
    localStringBuilder.append("(");
    localStringBuilder.append(Z);
    localStringBuilder.append(", ");
    localStringBuilder.append(a0);
    localStringBuilder.append(") - (");
    localStringBuilder.append(V);
    localStringBuilder.append(" x ");
    localStringBuilder.append(W);
    localStringBuilder.append(")");
    return localStringBuilder.toString();
  }
  
  public int u()
  {
    return Y;
  }
  
  public void u0(boolean paramBoolean)
  {
    D = paramBoolean;
  }
  
  public int v()
  {
    if (m0 == 8) {
      return 0;
    }
    return W;
  }
  
  public void v0(int paramInt)
  {
    W = paramInt;
    int i1 = h0;
    if (paramInt < i1) {
      W = i1;
    }
  }
  
  public float w()
  {
    return i0;
  }
  
  public void w0(float paramFloat)
  {
    i0 = paramFloat;
  }
  
  public int x()
  {
    return s0;
  }
  
  public void x0(int paramInt)
  {
    s0 = paramInt;
  }
  
  public DimensionBehaviour y()
  {
    return T[0];
  }
  
  public void y0(int paramInt1, int paramInt2)
  {
    Z = paramInt1;
    paramInt1 = paramInt2 - paramInt1;
    V = paramInt1;
    paramInt2 = g0;
    if (paramInt1 < paramInt2) {
      V = paramInt2;
    }
  }
  
  public int z()
  {
    ConstraintAnchor localConstraintAnchor = I;
    int i1 = 0;
    if (localConstraintAnchor != null) {
      i1 = 0 + g;
    }
    localConstraintAnchor = K;
    int i2 = i1;
    if (localConstraintAnchor != null) {
      i2 = i1 + g;
    }
    return i2;
  }
  
  public void z0(DimensionBehaviour paramDimensionBehaviour)
  {
    T[0] = paramDimensionBehaviour;
  }
  
  public static enum DimensionBehaviour
  {
    static
    {
      DimensionBehaviour localDimensionBehaviour1 = new DimensionBehaviour("FIXED", 0);
      b = localDimensionBehaviour1;
      DimensionBehaviour localDimensionBehaviour2 = new DimensionBehaviour("WRAP_CONTENT", 1);
      c = localDimensionBehaviour2;
      DimensionBehaviour localDimensionBehaviour3 = new DimensionBehaviour("MATCH_CONSTRAINT", 2);
      d = localDimensionBehaviour3;
      DimensionBehaviour localDimensionBehaviour4 = new DimensionBehaviour("MATCH_PARENT", 3);
      e = localDimensionBehaviour4;
      f = new DimensionBehaviour[] { localDimensionBehaviour1, localDimensionBehaviour2, localDimensionBehaviour3, localDimensionBehaviour4 };
    }
  }
}
