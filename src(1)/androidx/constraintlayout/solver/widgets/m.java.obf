package androidx.constraintlayout.solver.widgets;

import androidx.constraintlayout.solver.SolverVariable;
import androidx.constraintlayout.solver.d;

public class a
  extends g
{
  private int F0 = 0;
  private boolean G0 = true;
  private int H0 = 0;
  boolean I0 = false;
  
  public a() {}
  
  public boolean c1()
  {
    int n = 0;
    int i = 0;
    int k;
    ConstraintWidget localConstraintWidget;
    int m;
    for (int j = 1;; j = k)
    {
      k = E0;
      if (i >= k) {
        break;
      }
      localConstraintWidget = D0[i];
      if ((!G0) && (!localConstraintWidget.h()))
      {
        k = j;
      }
      else
      {
        k = F0;
        if (((k == 0) || (k == 1)) && (!localConstraintWidget.e0())) {}
        do
        {
          k = 0;
          break;
          m = F0;
          if (m != 2)
          {
            k = j;
            if (m != 3) {
              break;
            }
          }
          k = j;
        } while (!localConstraintWidget.f0());
      }
      i += 1;
    }
    if ((j != 0) && (k > 0))
    {
      i = 0;
      k = i;
      while (n < E0)
      {
        localConstraintWidget = D0[n];
        if ((G0) || (localConstraintWidget.h()))
        {
          m = i;
          j = k;
          if (k == 0)
          {
            j = F0;
            if (j == 0) {
              i = localConstraintWidget.m(ConstraintAnchor.Type.c).d();
            } else if (j == 1) {
              i = localConstraintWidget.m(ConstraintAnchor.Type.e).d();
            } else if (j == 2) {
              i = localConstraintWidget.m(ConstraintAnchor.Type.d).d();
            } else if (j == 3) {
              i = localConstraintWidget.m(ConstraintAnchor.Type.f).d();
            }
            j = 1;
            m = i;
          }
          int i1 = F0;
          if (i1 == 0)
          {
            i = Math.min(m, localConstraintWidget.m(ConstraintAnchor.Type.c).d());
            k = j;
          }
          else if (i1 == 1)
          {
            i = Math.max(m, localConstraintWidget.m(ConstraintAnchor.Type.e).d());
            k = j;
          }
          else if (i1 == 2)
          {
            i = Math.min(m, localConstraintWidget.m(ConstraintAnchor.Type.d).d());
            k = j;
          }
          else
          {
            i = m;
            k = j;
            if (i1 == 3)
            {
              i = Math.max(m, localConstraintWidget.m(ConstraintAnchor.Type.f).d());
              k = j;
            }
          }
        }
        n += 1;
      }
      i += H0;
      j = F0;
      if ((j != 0) && (j != 1)) {
        s0(i, i);
      } else {
        p0(i, i);
      }
      I0 = true;
      return true;
    }
    return false;
  }
  
  public boolean d1()
  {
    return G0;
  }
  
  public boolean e0()
  {
    return I0;
  }
  
  public int e1()
  {
    return F0;
  }
  
  public boolean f0()
  {
    return I0;
  }
  
  public int f1()
  {
    return H0;
  }
  
  public void g(d paramD, boolean paramBoolean)
  {
    Object localObject1 = Q;
    localObject1[0] = I;
    localObject1[2] = J;
    localObject1[1] = K;
    localObject1[3] = L;
    int i = 0;
    for (;;)
    {
      localObject1 = Q;
      if (i >= localObject1.length) {
        break;
      }
      i = paramD.q(localObject1[i]);
      i += 1;
    }
    i = F0;
    if ((i >= 0) && (i < 4))
    {
      localObject1 = localObject1[i];
      if (!I0) {
        c1();
      }
      if (I0)
      {
        I0 = false;
        i = F0;
        if ((i != 0) && (i != 1))
        {
          if ((i == 2) || (i == 3))
          {
            paramD.f(J.i, a0);
            paramD.f(L.i, a0);
          }
        }
        else
        {
          paramD.f(I.i, Z);
          paramD.f(K.i, Z);
        }
        return;
      }
      i = 0;
      Object localObject2;
      while (i < E0)
      {
        localObject2 = D0[i];
        if ((G0) || (((ConstraintWidget)localObject2).h()))
        {
          j = F0;
          if (((j == 0) || (j == 1)) && (((ConstraintWidget)localObject2).y() == ConstraintWidget.DimensionBehaviour.d) && (I.f != null) && (K.f != null)) {}
          do
          {
            paramBoolean = true;
            break;
            j = F0;
          } while (((j == 2) || (j == 3)) && (((ConstraintWidget)localObject2).O() == ConstraintWidget.DimensionBehaviour.d) && (J.f != null) && (L.f != null));
        }
        i += 1;
      }
      paramBoolean = false;
      if ((!I.k()) && (!K.k())) {
        i = 0;
      } else {
        i = 1;
      }
      if ((!J.k()) && (!L.k())) {
        j = 0;
      } else {
        j = 1;
      }
      int k;
      if (!paramBoolean)
      {
        k = F0;
        if (((k == 0) && (i != 0)) || ((k == 2) && (j != 0)) || ((k == 1) && (i != 0)) || ((k == 3) && (j != 0)))
        {
          j = 1;
          break label484;
        }
      }
      int j = 0;
      label484:
      i = 5;
      if (j == 0) {
        i = 4;
      }
      j = 0;
      while (j < E0)
      {
        Object localObject3 = D0[j];
        if ((G0) || (((ConstraintWidget)localObject3).h()))
        {
          localObject2 = paramD.q(Q[F0]);
          localObject3 = Q;
          int m = F0;
          i = ((SolverVariable)localObject2);
          if ((f != null) && (f.d == this)) {
            k = g + 0;
          } else {
            k = 0;
          }
          if ((m != 0) && (m != 2)) {
            paramD.g(i, (SolverVariable)localObject2, H0 + k, paramBoolean);
          } else {
            paramD.i(i, (SolverVariable)localObject2, H0 - k, paramBoolean);
          }
          paramD.e(i, (SolverVariable)localObject2, H0 + k, i);
        }
        j += 1;
      }
      i = F0;
      if (i == 0)
      {
        paramD.e(K.i, I.i, 0, 8);
        paramD.e(I.i, U.K.i, 0, 4);
        paramD.e(I.i, U.I.i, 0, 0);
        return;
      }
      if (i == 1)
      {
        paramD.e(I.i, K.i, 0, 8);
        paramD.e(I.i, U.I.i, 0, 4);
        paramD.e(I.i, U.K.i, 0, 0);
        return;
      }
      if (i == 2)
      {
        paramD.e(L.i, J.i, 0, 8);
        paramD.e(J.i, U.L.i, 0, 4);
        paramD.e(J.i, U.J.i, 0, 0);
        return;
      }
      if (i == 3)
      {
        paramD.e(J.i, L.i, 0, 8);
        paramD.e(J.i, U.J.i, 0, 4);
        paramD.e(J.i, U.L.i, 0, 0);
      }
    }
  }
  
  public int g1()
  {
    int i = F0;
    if ((i != 0) && (i != 1))
    {
      if ((i != 2) && (i != 3)) {
        return -1;
      }
      return 1;
    }
    return 0;
  }
  
  public boolean h()
  {
    return true;
  }
  
  protected void h1()
  {
    int i = 0;
    while (i < E0)
    {
      ConstraintWidget localConstraintWidget = D0[i];
      int j = F0;
      if ((j != 0) && (j != 1))
      {
        if ((j == 2) || (j == 3)) {
          localConstraintWidget.C0(1, true);
        }
      }
      else {
        localConstraintWidget.C0(0, true);
      }
      i += 1;
    }
  }
  
  public void i1(boolean paramBoolean)
  {
    G0 = paramBoolean;
  }
  
  public void j1(int paramInt)
  {
    F0 = paramInt;
  }
  
  public void k1(int paramInt)
  {
    H0 = paramInt;
  }
  
  public String toString()
  {
    Object localObject1 = new StringBuilder();
    ((StringBuilder)localObject1).append("[Barrier] ");
    ((StringBuilder)localObject1).append(r());
    ((StringBuilder)localObject1).append(" {");
    localObject1 = ((StringBuilder)localObject1).toString();
    int i = 0;
    while (i < E0)
    {
      ConstraintWidget localConstraintWidget = D0[i];
      localObject2 = localObject1;
      if (i > 0)
      {
        localObject2 = new StringBuilder();
        ((StringBuilder)localObject2).append((String)localObject1);
        ((StringBuilder)localObject2).append(", ");
        localObject2 = ((StringBuilder)localObject2).toString();
      }
      localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append((String)localObject2);
      ((StringBuilder)localObject1).append(localConstraintWidget.r());
      localObject1 = ((StringBuilder)localObject1).toString();
      i += 1;
    }
    Object localObject2 = new StringBuilder();
    ((StringBuilder)localObject2).append((String)localObject1);
    ((StringBuilder)localObject2).append("}");
    return ((StringBuilder)localObject2).toString();
  }
}
