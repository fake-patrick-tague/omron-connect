package androidx.constraintlayout.solver.widgets.analyzer;

import androidx.constraintlayout.solver.widgets.ConstraintWidget;
import androidx.constraintlayout.solver.widgets.a;
import androidx.constraintlayout.solver.widgets.g;
import java.util.Iterator;
import java.util.List;

class j
  extends WidgetRun
{
  public j(ConstraintWidget paramConstraintWidget)
  {
    super(paramConstraintWidget);
  }
  
  private void q(DependencyNode paramDependencyNode)
  {
    h.k.add(paramDependencyNode);
    l.add(h);
  }
  
  public void a(d paramD)
  {
    paramD = (a)b;
    int n = paramD.e1();
    Iterator localIterator = h.l.iterator();
    int i = 0;
    int j = -1;
    while (localIterator.hasNext())
    {
      int k = nextg;
      int m;
      if (j != -1)
      {
        m = j;
        if (k >= j) {}
      }
      else
      {
        m = k;
      }
      j = m;
      if (i < k)
      {
        i = k;
        j = m;
      }
    }
    if ((n != 0) && (n != 2))
    {
      h.d(i + paramD.f1());
      return;
    }
    h.d(j + paramD.f1());
  }
  
  void d()
  {
    Object localObject1 = b;
    if ((localObject1 instanceof a))
    {
      h.b = true;
      localObject1 = (a)localObject1;
      int n = ((a)localObject1).e1();
      boolean bool = ((a)localObject1).d1();
      int j = 0;
      int k = 0;
      int m = 0;
      int i = 0;
      Object localObject2;
      if (n != 0)
      {
        if (n != 1)
        {
          if (n != 2)
          {
            if (n != 3) {
              return;
            }
            h.e = DependencyNode.Type.h;
            while (i < E0)
            {
              localObject2 = D0[i];
              if ((bool) || (((ConstraintWidget)localObject2).Q() != 8))
              {
                localObject2 = g.i;
                k.add(h);
                h.l.add(localObject2);
              }
              i += 1;
            }
            q(b.g.h);
            q(b.g.i);
            return;
          }
          h.e = DependencyNode.Type.g;
          i = j;
          while (i < E0)
          {
            localObject2 = D0[i];
            if ((bool) || (((ConstraintWidget)localObject2).Q() != 8))
            {
              localObject2 = g.h;
              k.add(h);
              h.l.add(localObject2);
            }
            i += 1;
          }
          q(b.g.h);
          q(b.g.i);
          return;
        }
        h.e = DependencyNode.Type.f;
        i = k;
        while (i < E0)
        {
          localObject2 = D0[i];
          if ((bool) || (((ConstraintWidget)localObject2).Q() != 8))
          {
            localObject2 = f.i;
            k.add(h);
            h.l.add(localObject2);
          }
          i += 1;
        }
        q(b.f.h);
        q(b.f.i);
        return;
      }
      h.e = DependencyNode.Type.e;
      i = m;
      while (i < E0)
      {
        localObject2 = D0[i];
        if ((bool) || (((ConstraintWidget)localObject2).Q() != 8))
        {
          localObject2 = f.h;
          k.add(h);
          h.l.add(localObject2);
        }
        i += 1;
      }
      q(b.f.h);
      q(b.f.i);
    }
  }
  
  public void e()
  {
    ConstraintWidget localConstraintWidget = b;
    if ((localConstraintWidget instanceof a))
    {
      int i = ((a)localConstraintWidget).e1();
      if ((i != 0) && (i != 1))
      {
        b.W0(h.g);
        return;
      }
      b.V0(h.g);
    }
  }
  
  void f()
  {
    c = null;
    h.c();
  }
  
  boolean m()
  {
    return false;
  }
}
