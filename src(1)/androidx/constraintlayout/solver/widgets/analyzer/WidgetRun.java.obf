package androidx.constraintlayout.solver.widgets.analyzer;

import androidx.constraintlayout.solver.widgets.ConstraintAnchor;
import androidx.constraintlayout.solver.widgets.ConstraintWidget;
import androidx.constraintlayout.solver.widgets.ConstraintWidget.DimensionBehaviour;
import java.util.List;

public abstract class WidgetRun
  implements d
{
  public int a;
  ConstraintWidget b;
  l c;
  protected ConstraintWidget.DimensionBehaviour d;
  f e = new f(this);
  public int f = 0;
  boolean g = false;
  public DependencyNode h = new DependencyNode(this);
  public DependencyNode i = new DependencyNode(this);
  protected RunType j = RunType.b;
  
  public WidgetRun(ConstraintWidget paramConstraintWidget)
  {
    b = paramConstraintWidget;
  }
  
  private void l(int paramInt1, int paramInt2)
  {
    int k = a;
    if (k != 0)
    {
      if (k != 1)
      {
        ConstraintWidget localConstraintWidget;
        Object localObject1;
        float f1;
        if (k != 2)
        {
          if (k != 3) {
            return;
          }
          localConstraintWidget = b;
          localObject1 = f;
          Object localObject2 = d;
          ConstraintWidget.DimensionBehaviour localDimensionBehaviour = ConstraintWidget.DimensionBehaviour.d;
          if ((localObject2 == localDimensionBehaviour) && (a == 3))
          {
            localObject2 = g;
            if ((d == localDimensionBehaviour) && (a == 3)) {
              return;
            }
          }
          if (paramInt1 == 0) {
            localObject1 = g;
          }
          if (e.j)
          {
            f1 = localConstraintWidget.t();
            if (paramInt1 == 1) {
              paramInt1 = (int)(e.g / f1 + 0.5F);
            } else {
              paramInt1 = (int)(f1 * e.g + 0.5F);
            }
            e.d(paramInt1);
          }
        }
        else
        {
          localObject1 = b.I();
          if (localObject1 != null)
          {
            if (paramInt1 == 0) {
              localObject1 = f;
            } else {
              localObject1 = g;
            }
            localObject1 = e;
            if (j)
            {
              localConstraintWidget = b;
              if (paramInt1 == 0) {
                f1 = v;
              } else {
                f1 = y;
              }
              paramInt2 = (int)(g * f1 + 0.5F);
              e.d(g(paramInt2, paramInt1));
            }
          }
        }
      }
      else
      {
        paramInt1 = g(e.m, paramInt1);
        e.d(Math.min(paramInt1, paramInt2));
      }
    }
    else {
      e.d(g(paramInt2, paramInt1));
    }
  }
  
  public void a(d paramD) {}
  
  protected final void b(DependencyNode paramDependencyNode1, DependencyNode paramDependencyNode2, int paramInt)
  {
    l.add(paramDependencyNode2);
    f = paramInt;
    k.add(paramDependencyNode1);
  }
  
  protected final void c(DependencyNode paramDependencyNode1, DependencyNode paramDependencyNode2, int paramInt, f paramF)
  {
    l.add(paramDependencyNode2);
    l.add(e);
    h = paramInt;
    i = paramF;
    k.add(paramDependencyNode1);
    k.add(paramDependencyNode1);
  }
  
  abstract void d();
  
  abstract void e();
  
  abstract void f();
  
  protected final int g(int paramInt1, int paramInt2)
  {
    ConstraintWidget localConstraintWidget;
    if (paramInt2 == 0)
    {
      localConstraintWidget = b;
      k = u;
      paramInt2 = Math.max(t, paramInt1);
      if (k > 0) {
        paramInt2 = Math.min(k, paramInt1);
      }
      k = paramInt1;
      if (paramInt2 == paramInt1) {
        return k;
      }
    }
    else
    {
      localConstraintWidget = b;
      k = x;
      paramInt2 = Math.max(w, paramInt1);
      if (k > 0) {
        paramInt2 = Math.min(k, paramInt1);
      }
      k = paramInt1;
      if (paramInt2 == paramInt1) {
        return k;
      }
    }
    int k = paramInt2;
    return k;
  }
  
  protected final DependencyNode h(ConstraintAnchor paramConstraintAnchor)
  {
    Object localObject = f;
    if (localObject == null) {
      return null;
    }
    paramConstraintAnchor = d;
    localObject = e;
    int k = a.a[localObject.ordinal()];
    if (k != 1)
    {
      if (k != 2)
      {
        if (k != 3)
        {
          if (k != 4)
          {
            if (k != 5) {
              return null;
            }
            return g.i;
          }
          return g.k;
        }
        return g.h;
      }
      return f.i;
    }
    return f.h;
  }
  
  protected final DependencyNode i(ConstraintAnchor paramConstraintAnchor, int paramInt)
  {
    Object localObject = f;
    if (localObject == null) {
      return null;
    }
    paramConstraintAnchor = d;
    if (paramInt == 0) {
      paramConstraintAnchor = f;
    } else {
      paramConstraintAnchor = g;
    }
    localObject = e;
    paramInt = a.a[localObject.ordinal()];
    if (paramInt != 1)
    {
      if (paramInt != 2)
      {
        if (paramInt == 3) {
          break label74;
        }
        if (paramInt != 5) {
          return null;
        }
      }
      return i;
    }
    label74:
    return h;
  }
  
  public long j()
  {
    f localF = e;
    if (j) {
      return g;
    }
    return 0L;
  }
  
  public boolean k()
  {
    return g;
  }
  
  abstract boolean m();
  
  protected void n(d paramD, ConstraintAnchor paramConstraintAnchor1, ConstraintAnchor paramConstraintAnchor2, int paramInt)
  {
    paramD = h(paramConstraintAnchor1);
    DependencyNode localDependencyNode = h(paramConstraintAnchor2);
    if (j)
    {
      if (!j) {
        return;
      }
      int m = g + paramConstraintAnchor1.e();
      int k = g - paramConstraintAnchor2.e();
      int n = k - m;
      if ((!e.j) && (d == ConstraintWidget.DimensionBehaviour.d)) {
        l(paramInt, n);
      }
      paramConstraintAnchor1 = e;
      if (!j) {
        return;
      }
      if (g == n)
      {
        h.d(m);
        i.d(k);
        return;
      }
      paramConstraintAnchor1 = b;
      float f1;
      if (paramInt == 0) {
        f1 = paramConstraintAnchor1.w();
      } else {
        f1 = paramConstraintAnchor1.M();
      }
      paramInt = m;
      if (paramD == localDependencyNode)
      {
        paramInt = g;
        k = g;
        f1 = 0.5F;
      }
      m = e.g;
      h.d((int)(paramInt + 0.5F + (k - paramInt - m) * f1));
      i.d(h.g + e.g);
    }
  }
  
  protected void o(d paramD) {}
  
  protected void p(d paramD) {}
  
  static enum RunType
  {
    static
    {
      RunType localRunType1 = new RunType("NONE", 0);
      b = localRunType1;
      RunType localRunType2 = new RunType("START", 1);
      c = localRunType2;
      RunType localRunType3 = new RunType("END", 2);
      d = localRunType3;
      RunType localRunType4 = new RunType("CENTER", 3);
      e = localRunType4;
      f = new RunType[] { localRunType1, localRunType2, localRunType3, localRunType4 };
    }
  }
}
