package androidx.work;

import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public final class d
{
  private static final String a = j.f("Data");
  public static final d b = new a().a();
  Map<String, Object> c;
  
  d() {}
  
  public d(d paramD)
  {
    c = new HashMap(c);
  }
  
  public d(Map<String, ?> paramMap)
  {
    c = new HashMap(paramMap);
  }
  
  public static Boolean[] a(boolean[] paramArrayOfBoolean)
  {
    Boolean[] arrayOfBoolean = new Boolean[paramArrayOfBoolean.length];
    int i = 0;
    while (i < paramArrayOfBoolean.length)
    {
      arrayOfBoolean[i] = Boolean.valueOf(paramArrayOfBoolean[i]);
      i += 1;
    }
    return arrayOfBoolean;
  }
  
  public static Byte[] b(byte[] paramArrayOfByte)
  {
    Byte[] arrayOfByte = new Byte[paramArrayOfByte.length];
    int i = 0;
    while (i < paramArrayOfByte.length)
    {
      arrayOfByte[i] = Byte.valueOf(paramArrayOfByte[i]);
      i += 1;
    }
    return arrayOfByte;
  }
  
  public static Double[] c(double[] paramArrayOfDouble)
  {
    Double[] arrayOfDouble = new Double[paramArrayOfDouble.length];
    int i = 0;
    while (i < paramArrayOfDouble.length)
    {
      arrayOfDouble[i] = Double.valueOf(paramArrayOfDouble[i]);
      i += 1;
    }
    return arrayOfDouble;
  }
  
  public static Float[] d(float[] paramArrayOfFloat)
  {
    Float[] arrayOfFloat = new Float[paramArrayOfFloat.length];
    int i = 0;
    while (i < paramArrayOfFloat.length)
    {
      arrayOfFloat[i] = Float.valueOf(paramArrayOfFloat[i]);
      i += 1;
    }
    return arrayOfFloat;
  }
  
  public static Integer[] e(int[] paramArrayOfInt)
  {
    Integer[] arrayOfInteger = new Integer[paramArrayOfInt.length];
    int i = 0;
    while (i < paramArrayOfInt.length)
    {
      arrayOfInteger[i] = Integer.valueOf(paramArrayOfInt[i]);
      i += 1;
    }
    return arrayOfInteger;
  }
  
  public static Long[] f(long[] paramArrayOfLong)
  {
    Long[] arrayOfLong = new Long[paramArrayOfLong.length];
    int i = 0;
    while (i < paramArrayOfLong.length)
    {
      arrayOfLong[i] = Long.valueOf(paramArrayOfLong[i]);
      i += 1;
    }
    return arrayOfLong;
  }
  
  /* Error */
  public static d g(byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: aload_0
    //   1: arraylength
    //   2: sipush 10240
    //   5: if_icmpgt +224 -> 229
    //   8: new 38	java/util/HashMap
    //   11: dup
    //   12: invokespecial 91	java/util/HashMap:<init>	()V
    //   15: astore 5
    //   17: new 93	java/io/ByteArrayInputStream
    //   20: dup
    //   21: aload_0
    //   22: invokespecial 96	java/io/ByteArrayInputStream:<init>	([B)V
    //   25: astore 4
    //   27: new 98	java/io/ObjectInputStream
    //   30: dup
    //   31: aload 4
    //   33: invokespecial 101	java/io/ObjectInputStream:<init>	(Ljava/io/InputStream;)V
    //   36: astore_2
    //   37: aload_2
    //   38: astore_0
    //   39: aload_2
    //   40: invokevirtual 105	java/io/ObjectInputStream:readInt	()I
    //   43: istore_1
    //   44: iload_1
    //   45: ifle +28 -> 73
    //   48: aload_2
    //   49: astore_0
    //   50: aload 5
    //   52: aload_2
    //   53: invokevirtual 109	java/io/ObjectInputStream:readUTF	()Ljava/lang/String;
    //   56: aload_2
    //   57: invokevirtual 113	java/io/ObjectInputStream:readObject	()Ljava/lang/Object;
    //   60: invokeinterface 119 3 0
    //   65: pop
    //   66: iload_1
    //   67: iconst_1
    //   68: isub
    //   69: istore_1
    //   70: goto -26 -> 44
    //   73: aload_2
    //   74: invokevirtual 122	java/io/ObjectInputStream:close	()V
    //   77: goto +14 -> 91
    //   80: astore_0
    //   81: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   84: ldc 124
    //   86: aload_0
    //   87: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   90: pop
    //   91: aload 4
    //   93: invokevirtual 130	java/io/ByteArrayInputStream:close	()V
    //   96: goto +79 -> 175
    //   99: astore_3
    //   100: goto +22 -> 122
    //   103: astore_3
    //   104: goto +18 -> 122
    //   107: astore_2
    //   108: aconst_null
    //   109: astore_0
    //   110: goto +76 -> 186
    //   113: astore_0
    //   114: goto +4 -> 118
    //   117: astore_0
    //   118: aconst_null
    //   119: astore_2
    //   120: aload_0
    //   121: astore_3
    //   122: aload_2
    //   123: astore_0
    //   124: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   127: ldc 124
    //   129: aload_3
    //   130: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   133: pop
    //   134: aload_2
    //   135: ifnull +21 -> 156
    //   138: aload_2
    //   139: invokevirtual 122	java/io/ObjectInputStream:close	()V
    //   142: goto +14 -> 156
    //   145: astore_0
    //   146: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   149: ldc 124
    //   151: aload_0
    //   152: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   155: pop
    //   156: aload 4
    //   158: invokevirtual 130	java/io/ByteArrayInputStream:close	()V
    //   161: goto +14 -> 175
    //   164: astore_0
    //   165: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   168: ldc 124
    //   170: aload_0
    //   171: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   174: pop
    //   175: new 2	androidx/work/d
    //   178: dup
    //   179: aload 5
    //   181: invokespecial 131	androidx/work/d:<init>	(Ljava/util/Map;)V
    //   184: areturn
    //   185: astore_2
    //   186: aload_0
    //   187: ifnull +21 -> 208
    //   190: aload_0
    //   191: invokevirtual 122	java/io/ObjectInputStream:close	()V
    //   194: goto +14 -> 208
    //   197: astore_0
    //   198: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   201: ldc 124
    //   203: aload_0
    //   204: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   207: pop
    //   208: aload 4
    //   210: invokevirtual 130	java/io/ByteArrayInputStream:close	()V
    //   213: goto +14 -> 227
    //   216: astore_0
    //   217: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   220: ldc 124
    //   222: aload_0
    //   223: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   226: pop
    //   227: aload_2
    //   228: athrow
    //   229: new 133	java/lang/IllegalStateException
    //   232: dup
    //   233: ldc -121
    //   235: invokespecial 138	java/lang/IllegalStateException:<init>	(Ljava/lang/String;)V
    //   238: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	239	0	paramArrayOfByte	byte[]
    //   43	27	1	i	int
    //   36	38	2	localObjectInputStream	java.io.ObjectInputStream
    //   107	1	2	localObject1	Object
    //   119	20	2	localObject2	Object
    //   185	43	2	localObject3	Object
    //   99	1	3	localClassNotFoundException	ClassNotFoundException
    //   103	1	3	localIOException	java.io.IOException
    //   121	9	3	arrayOfByte	byte[]
    //   25	184	4	localByteArrayInputStream	java.io.ByteArrayInputStream
    //   15	165	5	localHashMap	HashMap
    // Exception table:
    //   from	to	target	type
    //   73	77	80	java/io/IOException
    //   39	44	99	java/lang/ClassNotFoundException
    //   50	66	99	java/lang/ClassNotFoundException
    //   39	44	103	java/io/IOException
    //   50	66	103	java/io/IOException
    //   27	37	107	finally
    //   27	37	113	java/lang/ClassNotFoundException
    //   27	37	117	java/io/IOException
    //   138	142	145	java/io/IOException
    //   91	96	164	java/io/IOException
    //   156	161	164	java/io/IOException
    //   39	44	185	finally
    //   50	66	185	finally
    //   124	134	185	finally
    //   190	194	197	java/io/IOException
    //   208	213	216	java/io/IOException
  }
  
  /* Error */
  public static byte[] k(d paramD)
  {
    // Byte code:
    //   0: new 142	java/io/ByteArrayOutputStream
    //   3: dup
    //   4: invokespecial 143	java/io/ByteArrayOutputStream:<init>	()V
    //   7: astore 4
    //   9: aconst_null
    //   10: astore_3
    //   11: aconst_null
    //   12: astore_1
    //   13: new 145	java/io/ObjectOutputStream
    //   16: dup
    //   17: aload 4
    //   19: invokespecial 148	java/io/ObjectOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   22: astore_2
    //   23: aload_2
    //   24: aload_0
    //   25: invokevirtual 151	androidx/work/d:j	()I
    //   28: invokevirtual 155	java/io/ObjectOutputStream:writeInt	(I)V
    //   31: aload_0
    //   32: getfield 40	androidx/work/d:c	Ljava/util/Map;
    //   35: invokeinterface 159 1 0
    //   40: invokeinterface 165 1 0
    //   45: astore_0
    //   46: aload_0
    //   47: invokeinterface 171 1 0
    //   52: ifeq +39 -> 91
    //   55: aload_0
    //   56: invokeinterface 174 1 0
    //   61: checkcast 176	java/util/Map$Entry
    //   64: astore_1
    //   65: aload_2
    //   66: aload_1
    //   67: invokeinterface 179 1 0
    //   72: checkcast 181	java/lang/String
    //   75: invokevirtual 184	java/io/ObjectOutputStream:writeUTF	(Ljava/lang/String;)V
    //   78: aload_2
    //   79: aload_1
    //   80: invokeinterface 187 1 0
    //   85: invokevirtual 191	java/io/ObjectOutputStream:writeObject	(Ljava/lang/Object;)V
    //   88: goto -42 -> 46
    //   91: aload_2
    //   92: invokevirtual 192	java/io/ObjectOutputStream:close	()V
    //   95: goto +14 -> 109
    //   98: astore_0
    //   99: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   102: ldc -62
    //   104: aload_0
    //   105: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   108: pop
    //   109: aload 4
    //   111: invokevirtual 195	java/io/ByteArrayOutputStream:close	()V
    //   114: goto +14 -> 128
    //   117: astore_0
    //   118: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   121: ldc -62
    //   123: aload_0
    //   124: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   127: pop
    //   128: aload 4
    //   130: invokevirtual 198	java/io/ByteArrayOutputStream:size	()I
    //   133: sipush 10240
    //   136: if_icmpgt +9 -> 145
    //   139: aload 4
    //   141: invokevirtual 202	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   144: areturn
    //   145: new 133	java/lang/IllegalStateException
    //   148: dup
    //   149: ldc -121
    //   151: invokespecial 138	java/lang/IllegalStateException:<init>	(Ljava/lang/String;)V
    //   154: athrow
    //   155: astore_0
    //   156: aload_2
    //   157: astore_1
    //   158: goto +80 -> 238
    //   161: astore_1
    //   162: aload_2
    //   163: astore_0
    //   164: aload_1
    //   165: astore_2
    //   166: goto +10 -> 176
    //   169: astore_0
    //   170: goto +68 -> 238
    //   173: astore_2
    //   174: aload_3
    //   175: astore_0
    //   176: aload_0
    //   177: astore_1
    //   178: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   181: ldc -62
    //   183: aload_2
    //   184: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   187: pop
    //   188: aload_0
    //   189: astore_1
    //   190: aload 4
    //   192: invokevirtual 202	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   195: astore_2
    //   196: aload_0
    //   197: ifnull +21 -> 218
    //   200: aload_0
    //   201: invokevirtual 192	java/io/ObjectOutputStream:close	()V
    //   204: goto +14 -> 218
    //   207: astore_0
    //   208: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   211: ldc -62
    //   213: aload_0
    //   214: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   217: pop
    //   218: aload 4
    //   220: invokevirtual 195	java/io/ByteArrayOutputStream:close	()V
    //   223: aload_2
    //   224: areturn
    //   225: astore_0
    //   226: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   229: ldc -62
    //   231: aload_0
    //   232: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   235: pop
    //   236: aload_2
    //   237: areturn
    //   238: aload_1
    //   239: ifnull +21 -> 260
    //   242: aload_1
    //   243: invokevirtual 192	java/io/ObjectOutputStream:close	()V
    //   246: goto +14 -> 260
    //   249: astore_1
    //   250: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   253: ldc -62
    //   255: aload_1
    //   256: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   259: pop
    //   260: aload 4
    //   262: invokevirtual 195	java/io/ByteArrayOutputStream:close	()V
    //   265: goto +14 -> 279
    //   268: astore_1
    //   269: getstatic 25	androidx/work/d:a	Ljava/lang/String;
    //   272: ldc -62
    //   274: aload_1
    //   275: invokestatic 129	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   278: pop
    //   279: aload_0
    //   280: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	281	0	paramD	d
    //   12	146	1	localObject1	Object
    //   161	4	1	localIOException1	java.io.IOException
    //   177	66	1	localD	d
    //   249	7	1	localIOException2	java.io.IOException
    //   268	7	1	localIOException3	java.io.IOException
    //   22	144	2	localObject2	Object
    //   173	11	2	localIOException4	java.io.IOException
    //   195	42	2	arrayOfByte	byte[]
    //   10	165	3	localObject3	Object
    //   7	254	4	localByteArrayOutputStream	java.io.ByteArrayOutputStream
    // Exception table:
    //   from	to	target	type
    //   91	95	98	java/io/IOException
    //   109	114	117	java/io/IOException
    //   23	46	155	finally
    //   46	88	155	finally
    //   23	46	161	java/io/IOException
    //   46	88	161	java/io/IOException
    //   13	23	169	finally
    //   178	188	169	finally
    //   190	196	169	finally
    //   13	23	173	java/io/IOException
    //   200	204	207	java/io/IOException
    //   218	223	225	java/io/IOException
    //   242	246	249	java/io/IOException
    //   260	265	268	java/io/IOException
  }
  
  public boolean equals(Object paramObject)
  {
    if (this == paramObject) {
      return true;
    }
    if (paramObject != null)
    {
      if (d.class != paramObject.getClass()) {
        return false;
      }
      paramObject = (d)paramObject;
      Object localObject1 = c.keySet();
      if (!((Set)localObject1).equals(c.keySet())) {
        return false;
      }
      localObject1 = ((Set)localObject1).iterator();
      while (((Iterator)localObject1).hasNext())
      {
        Object localObject3 = (String)((Iterator)localObject1).next();
        Object localObject2 = c.get(localObject3);
        localObject3 = c.get(localObject3);
        boolean bool;
        if ((localObject2 != null) && (localObject3 != null))
        {
          if (((localObject2 instanceof Object[])) && ((localObject3 instanceof Object[]))) {
            bool = Arrays.deepEquals((Object[])localObject2, (Object[])localObject3);
          } else {
            bool = localObject2.equals(localObject3);
          }
        }
        else if (localObject2 == localObject3) {
          bool = true;
        } else {
          bool = false;
        }
        if (!bool) {
          return false;
        }
      }
      return true;
    }
    return false;
  }
  
  public Map<String, Object> h()
  {
    return Collections.unmodifiableMap(c);
  }
  
  public int hashCode()
  {
    return c.hashCode() * 31;
  }
  
  public String i(String paramString)
  {
    paramString = c.get(paramString);
    if ((paramString instanceof String)) {
      return (String)paramString;
    }
    return null;
  }
  
  public int j()
  {
    return c.size();
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder("Data {");
    if (!c.isEmpty())
    {
      Iterator localIterator = c.keySet().iterator();
      while (localIterator.hasNext())
      {
        Object localObject = (String)localIterator.next();
        localStringBuilder.append((String)localObject);
        localStringBuilder.append(" : ");
        localObject = c.get(localObject);
        if ((localObject instanceof Object[])) {
          localStringBuilder.append(Arrays.toString((Object[])localObject));
        } else {
          localStringBuilder.append(localObject);
        }
        localStringBuilder.append(", ");
      }
    }
    localStringBuilder.append("}");
    return localStringBuilder.toString();
  }
  
  public static final class a
  {
    private Map<String, Object> a = new HashMap();
    
    public a() {}
    
    public d a()
    {
      d localD = new d(a);
      d.k(localD);
      return localD;
    }
    
    public a b(String paramString, Object paramObject)
    {
      if (paramObject == null)
      {
        a.put(paramString, null);
        return this;
      }
      Class localClass = paramObject.getClass();
      if ((localClass != Boolean.class) && (localClass != Byte.class) && (localClass != Integer.class) && (localClass != Long.class) && (localClass != Float.class) && (localClass != Double.class) && (localClass != String.class) && (localClass != [Ljava.lang.Boolean.class) && (localClass != [Ljava.lang.Byte.class) && (localClass != [Ljava.lang.Integer.class) && (localClass != [Ljava.lang.Long.class) && (localClass != [Ljava.lang.Float.class) && (localClass != [Ljava.lang.Double.class) && (localClass != [Ljava.lang.String.class))
      {
        if (localClass == [Z.class)
        {
          a.put(paramString, d.a((boolean[])paramObject));
          return this;
        }
        if (localClass == [B.class)
        {
          a.put(paramString, d.b((byte[])paramObject));
          return this;
        }
        if (localClass == [I.class)
        {
          a.put(paramString, d.e((int[])paramObject));
          return this;
        }
        if (localClass == [J.class)
        {
          a.put(paramString, d.f((long[])paramObject));
          return this;
        }
        if (localClass == [F.class)
        {
          a.put(paramString, d.d((float[])paramObject));
          return this;
        }
        if (localClass == [D.class)
        {
          a.put(paramString, d.c((double[])paramObject));
          return this;
        }
        throw new IllegalArgumentException(String.format("Key %s has invalid type %s", new Object[] { paramString, localClass }));
      }
      a.put(paramString, paramObject);
      return this;
    }
    
    public a c(d paramD)
    {
      d(c);
      return this;
    }
    
    public a d(Map<String, Object> paramMap)
    {
      paramMap = paramMap.entrySet().iterator();
      while (paramMap.hasNext())
      {
        Map.Entry localEntry = (Map.Entry)paramMap.next();
        b((String)localEntry.getKey(), localEntry.getValue());
      }
      return this;
    }
    
    public a e(String paramString1, String paramString2)
    {
      a.put(paramString1, paramString2);
      return this;
    }
  }
}
