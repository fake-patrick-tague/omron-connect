package com.google.android.gms.common.stats;

import android.os.Parcel;
import android.os.Parcelable.Creator;
import android.text.TextUtils;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.internal.safeparcel.SafeParcelWriter;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Class;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Constructor;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Field;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.Param;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable.VersionField;
import java.util.List;

@Deprecated
@KeepForSdk
@SafeParcelable.Class(creator="WakeLockEventCreator")
public final class WakeLockEvent
  extends StatsEvent
{
  public static final Parcelable.Creator<WakeLockEvent> CREATOR = new zza();
  @SafeParcelable.VersionField(id=1)
  final int zza;
  @SafeParcelable.Field(getter="getTimeMillis", id=2)
  private final long zzb;
  @SafeParcelable.Field(getter="getEventType", id=11)
  private int zzc;
  @SafeParcelable.Field(getter="getWakeLockName", id=4)
  private final String zzd;
  @SafeParcelable.Field(getter="getSecondaryWakeLockName", id=10)
  private final String zze;
  @SafeParcelable.Field(getter="getCodePackage", id=17)
  private final String zzf;
  @SafeParcelable.Field(getter="getWakeLockType", id=5)
  private final int zzg;
  @SafeParcelable.Field(getter="getCallingPackages", id=6)
  private final List zzh;
  @SafeParcelable.Field(getter="getEventKey", id=12)
  private final String zzi;
  @SafeParcelable.Field(getter="getElapsedRealtime", id=8)
  private final long zzj;
  @SafeParcelable.Field(getter="getDeviceState", id=14)
  private int zzk;
  @SafeParcelable.Field(getter="getHostPackage", id=13)
  private final String zzl;
  @SafeParcelable.Field(getter="getBeginPowerPercentage", id=15)
  private final float zzm;
  @SafeParcelable.Field(getter="getTimeout", id=16)
  private final long zzn;
  @SafeParcelable.Field(getter="getAcquiredWithTimeout", id=18)
  private final boolean zzo;
  private long zzp;
  
  @SafeParcelable.Constructor
  WakeLockEvent(@SafeParcelable.Param(id=1) int paramInt1, @SafeParcelable.Param(id=2) long paramLong1, @SafeParcelable.Param(id=11) int paramInt2, @SafeParcelable.Param(id=4) String paramString1, @SafeParcelable.Param(id=5) int paramInt3, @SafeParcelable.Param(id=6) List paramList, @SafeParcelable.Param(id=12) String paramString2, @SafeParcelable.Param(id=8) long paramLong2, @SafeParcelable.Param(id=14) int paramInt4, @SafeParcelable.Param(id=10) String paramString3, @SafeParcelable.Param(id=13) String paramString4, @SafeParcelable.Param(id=15) float paramFloat, @SafeParcelable.Param(id=16) long paramLong3, @SafeParcelable.Param(id=17) String paramString5, @SafeParcelable.Param(id=18) boolean paramBoolean)
  {
    zza = paramInt1;
    zzb = paramLong1;
    zzc = paramInt2;
    zzd = paramString1;
    zze = paramString3;
    zzf = paramString5;
    zzg = paramInt3;
    zzp = -1L;
    zzh = paramList;
    zzi = paramString2;
    zzj = paramLong2;
    zzk = paramInt4;
    zzl = paramString4;
    zzm = paramFloat;
    zzn = paramLong3;
    zzo = paramBoolean;
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    paramInt = SafeParcelWriter.beginObjectHeader(paramParcel);
    SafeParcelWriter.writeInt(paramParcel, 1, zza);
    SafeParcelWriter.writeLong(paramParcel, 2, zzb);
    SafeParcelWriter.writeString(paramParcel, 4, zzd, false);
    SafeParcelWriter.writeInt(paramParcel, 5, zzg);
    SafeParcelWriter.writeStringList(paramParcel, 6, zzh, false);
    SafeParcelWriter.writeLong(paramParcel, 8, zzj);
    SafeParcelWriter.writeString(paramParcel, 10, zze, false);
    SafeParcelWriter.writeInt(paramParcel, 11, zzc);
    SafeParcelWriter.writeString(paramParcel, 12, zzi, false);
    SafeParcelWriter.writeString(paramParcel, 13, zzl, false);
    SafeParcelWriter.writeInt(paramParcel, 14, zzk);
    SafeParcelWriter.writeFloat(paramParcel, 15, zzm);
    SafeParcelWriter.writeLong(paramParcel, 16, zzn);
    SafeParcelWriter.writeString(paramParcel, 17, zzf, false);
    SafeParcelWriter.writeBoolean(paramParcel, 18, zzo);
    SafeParcelWriter.finishObjectHeader(paramParcel, paramInt);
  }
  
  public final int zza()
  {
    return zzc;
  }
  
  public final long zzb()
  {
    return zzp;
  }
  
  public final long zzc()
  {
    return zzb;
  }
  
  public final String zzd()
  {
    Object localObject1 = zzh;
    String str = zzd;
    int i = zzg;
    Object localObject4 = "";
    if (localObject1 == null) {
      localObject1 = "";
    } else {
      localObject1 = TextUtils.join(",", (Iterable)localObject1);
    }
    int j = zzk;
    Object localObject3 = zze;
    Object localObject2 = localObject3;
    if (localObject3 == null) {
      localObject2 = "";
    }
    Object localObject5 = zzl;
    localObject3 = localObject5;
    if (localObject5 == null) {
      localObject3 = "";
    }
    float f = zzm;
    localObject5 = zzf;
    if (localObject5 != null) {
      localObject4 = localObject5;
    }
    boolean bool = zzo;
    localObject5 = new StringBuilder();
    ((StringBuilder)localObject5).append("\t");
    ((StringBuilder)localObject5).append(str);
    ((StringBuilder)localObject5).append("\t");
    ((StringBuilder)localObject5).append(i);
    ((StringBuilder)localObject5).append("\t");
    ((StringBuilder)localObject5).append((String)localObject1);
    ((StringBuilder)localObject5).append("\t");
    ((StringBuilder)localObject5).append(j);
    ((StringBuilder)localObject5).append("\t");
    ((StringBuilder)localObject5).append((String)localObject2);
    ((StringBuilder)localObject5).append("\t");
    ((StringBuilder)localObject5).append((String)localObject3);
    ((StringBuilder)localObject5).append("\t");
    ((StringBuilder)localObject5).append(f);
    ((StringBuilder)localObject5).append("\t");
    ((StringBuilder)localObject5).append((String)localObject4);
    ((StringBuilder)localObject5).append("\t");
    ((StringBuilder)localObject5).append(bool);
    return ((StringBuilder)localObject5).toString();
  }
}
