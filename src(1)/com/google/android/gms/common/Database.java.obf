package com.google.android.gms.common;

import android.content.Context;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.RemoteException;
import android.os.StrictMode;
import android.os.StrictMode.ThreadPolicy;
import android.util.Log;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.internal.zzae;
import com.google.android.gms.common.internal.zzaf;
import com.google.android.gms.dynamic.ObjectWrapper;
import com.google.android.gms.dynamite.DynamiteModule;
import com.google.android.gms.dynamite.DynamiteModule.LoadingException;

final class zzn
{
  static final zzl zza = new zzf(zzj.zze("0?\005?0?\003??\003\002\001\002\002\024\020?e\bs?/?Q?"));
  static final zzl zzb = new zzg(zzj.zze("0?\006\0040?\003??\003\002\001\002\002\024\003?????r?k?"));
  static final zzl zzc = new zzh(zzj.zze("0?\004C0?\003+?\003\002\001\002\002\t\000???FdJ0?0"));
  static final zzl zzd = new zzi(zzj.zze("0?\004?0?\003??\003\002\001\002\002\t\000???l}?N?0"));
  private static volatile zzaf zze;
  private static final Object zzf = new Object();
  private static Context zzg;
  
  static zzx zza(String paramString, zzj paramZzj, boolean paramBoolean1, boolean paramBoolean2)
  {
    StrictMode.ThreadPolicy localThreadPolicy = StrictMode.allowThreadDiskReads();
    try
    {
      paramString = zzh(paramString, paramZzj, paramBoolean1, paramBoolean2);
      return paramString;
    }
    finally
    {
      StrictMode.setThreadPolicy(localThreadPolicy);
    }
  }
  
  static zzx zzb(String paramString, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3)
  {
    return zzi(paramString, paramBoolean1, false, false, true);
  }
  
  static zzx zzc(String paramString, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3)
  {
    return zzi(paramString, paramBoolean1, false, false, false);
  }
  
  static void zze(Context paramContext)
  {
    try
    {
      if (zzg == null)
      {
        if (paramContext != null)
        {
          zzg = paramContext.getApplicationContext();
          return;
        }
        return;
      }
      Log.w("GoogleCertificates", "GoogleCertificates has been initialized already");
      return;
    }
    finally {}
  }
  
  /* Error */
  static boolean zzf()
  {
    // Byte code:
    //   0: invokestatic 65	android/os/StrictMode:allowThreadDiskReads	()Landroid/os/StrictMode$ThreadPolicy;
    //   3: astore_2
    //   4: invokestatic 161	com/google/android/gms/common/zzn:zzj	()V
    //   7: getstatic 163	com/google/android/gms/common/zzn:zze	Lcom/google/android/gms/common/internal/zzaf;
    //   10: invokeinterface 167 1 0
    //   15: istore_0
    //   16: aload_2
    //   17: invokestatic 72	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   20: iload_0
    //   21: ireturn
    //   22: astore_1
    //   23: goto +23 -> 46
    //   26: astore_1
    //   27: goto +4 -> 31
    //   30: astore_1
    //   31: ldc -111
    //   33: ldc -87
    //   35: aload_1
    //   36: invokestatic 173	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   39: pop
    //   40: aload_2
    //   41: invokestatic 72	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   44: iconst_0
    //   45: ireturn
    //   46: aload_2
    //   47: invokestatic 72	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   50: aload_1
    //   51: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   15	6	0	bool	boolean
    //   22	1	1	localObject	Object
    //   26	1	1	localRemoteException	RemoteException
    //   30	21	1	localLoadingException	DynamiteModule.LoadingException
    //   3	44	2	localThreadPolicy	StrictMode.ThreadPolicy
    // Exception table:
    //   from	to	target	type
    //   4	16	22	finally
    //   31	40	22	finally
    //   4	16	26	android/os/RemoteException
    //   4	16	30	com/google/android/gms/dynamite/DynamiteModule$LoadingException
  }
  
  /* Error */
  static boolean zzg()
  {
    // Byte code:
    //   0: invokestatic 65	android/os/StrictMode:allowThreadDiskReads	()Landroid/os/StrictMode$ThreadPolicy;
    //   3: astore_2
    //   4: invokestatic 161	com/google/android/gms/common/zzn:zzj	()V
    //   7: getstatic 163	com/google/android/gms/common/zzn:zze	Lcom/google/android/gms/common/internal/zzaf;
    //   10: invokeinterface 175 1 0
    //   15: istore_0
    //   16: aload_2
    //   17: invokestatic 72	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   20: iload_0
    //   21: ireturn
    //   22: astore_1
    //   23: goto +23 -> 46
    //   26: astore_1
    //   27: goto +4 -> 31
    //   30: astore_1
    //   31: ldc -111
    //   33: ldc -87
    //   35: aload_1
    //   36: invokestatic 173	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   39: pop
    //   40: aload_2
    //   41: invokestatic 72	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   44: iconst_0
    //   45: ireturn
    //   46: aload_2
    //   47: invokestatic 72	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   50: aload_1
    //   51: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   15	6	0	bool	boolean
    //   22	1	1	localObject	Object
    //   26	1	1	localRemoteException	RemoteException
    //   30	21	1	localLoadingException	DynamiteModule.LoadingException
    //   3	44	2	localThreadPolicy	StrictMode.ThreadPolicy
    // Exception table:
    //   from	to	target	type
    //   4	16	22	finally
    //   31	40	22	finally
    //   4	16	26	android/os/RemoteException
    //   4	16	30	com/google/android/gms/dynamite/DynamiteModule$LoadingException
  }
  
  private static zzx zzh(String paramString, zzj paramZzj, boolean paramBoolean1, boolean paramBoolean2)
  {
    try
    {
      zzj();
      Preconditions.checkNotNull(zzg);
      zzs localZzs = new zzs(paramString, paramZzj, paramBoolean1, paramBoolean2);
      try
      {
        paramBoolean2 = zze.zzh(localZzs, ObjectWrapper.wrap(zzg.getPackageManager()));
        if (paramBoolean2) {
          return zzx.zzb();
        }
        return new zzv(new zze(paramBoolean1, paramString, paramZzj), null);
      }
      catch (RemoteException paramString)
      {
        Log.e("GoogleCertificates", "Failed to get Google certificates from remote", paramString);
        return zzx.zzd("module call", paramString);
      }
      return zzx.zzd("module init: ".concat(String.valueOf(paramString.getMessage())), paramString);
    }
    catch (DynamiteModule.LoadingException paramString)
    {
      Log.e("GoogleCertificates", "Failed to get Google certificates from remote", paramString);
    }
  }
  
  private static zzx zzi(String paramString, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    StrictMode.ThreadPolicy localThreadPolicy = StrictMode.allowThreadDiskReads();
    for (;;)
    {
      String str2;
      try
      {
        Preconditions.checkNotNull(zzg);
        try
        {
          zzj();
          paramString = new zzo(paramString, paramBoolean1, false, ObjectWrapper.wrap(zzg), false);
          if (paramBoolean4) {}
          try
          {
            paramString = zze.zze(paramString);
            continue;
            paramString = zze.zzf(paramString);
            if (paramString.zzb())
            {
              paramString = zzx.zzf(paramString.zzc());
              continue;
            }
            str2 = paramString.zza();
            if (paramString.zzd() != 4) {
              break label186;
            }
            localNameNotFoundException = new PackageManager.NameNotFoundException();
          }
          catch (RemoteException paramString)
          {
            Log.e("GoogleCertificates", "Failed to get Google certificates from remote", paramString);
            paramString = zzx.zzd("module call", paramString);
            continue;
          }
          paramString = zzx.zzg(paramString.zzc(), paramString.zzd(), str1, localNameNotFoundException);
        }
        catch (DynamiteModule.LoadingException paramString)
        {
          Log.e("GoogleCertificates", "Failed to get Google certificates from remote", paramString);
          paramString = zzx.zzd("module init: ".concat(String.valueOf(paramString.getMessage())), paramString);
        }
        return paramString;
      }
      finally
      {
        StrictMode.setThreadPolicy(localThreadPolicy);
      }
      label186:
      PackageManager.NameNotFoundException localNameNotFoundException = null;
      String str1 = str2;
      if (str2 == null) {
        str1 = "error checking package certificate";
      }
    }
  }
  
  private static void zzj()
    throws DynamiteModule.LoadingException
  {
    if (zze != null) {
      return;
    }
    Preconditions.checkNotNull(zzg);
    synchronized (zzf)
    {
      if (zze == null) {
        zze = zzae.zzb(DynamiteModule.load(zzg, DynamiteModule.PREFER_HIGHEST_OR_LOCAL_VERSION_NO_FORCE_STAGING, "com.google.android.gms.googlecertificates").instantiate("com.google.android.gms.common.GoogleCertificatesImpl"));
      }
      return;
    }
  }
}
