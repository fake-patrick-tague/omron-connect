package com.google.android.gms.measurement.internal;

import com.google.android.gms.common.util.VisibleForTesting;
import java.util.Iterator;
import java.util.List;

@VisibleForTesting
public final class zzea
{
  private static final Object zza = new Object();
  private final String zzb;
  private final zzdx zzc;
  private final Object zzd;
  private final Object zze;
  private final Object zzf;
  private volatile Object zzg;
  private volatile Object zzh;
  
  public final Object zza(Object paramObject)
  {
    synchronized (zzf)
    {
      if (paramObject == null) {}
    }
    return zzd;
    synchronized (zza)
    {
      if (zzab.zza())
      {
        if (zzh == null) {
          paramObject = zzd;
        } else {
          paramObject = zzh;
        }
        return paramObject;
      }
      for (;;)
      {
        try
        {
          Iterator localIterator = zzeb.zzb().iterator();
          if (localIterator.hasNext())
          {
            localZzea = (zzea)localIterator.next();
            boolean bool = zzab.zza();
            if (!bool) {
              ??? = null;
            }
          }
        }
        catch (SecurityException paramObject)
        {
          zzea localZzea;
          zzdx localZzdx;
          continue;
        }
        try
        {
          localZzdx = zzc;
          paramObject = ???;
          if (localZzdx != null) {
            paramObject = localZzdx.zza();
          }
        }
        catch (IllegalStateException paramObject)
        {
          paramObject = ???;
          continue;
        }
        synchronized (zza)
        {
          zzh = paramObject;
        }
      }
      throw new IllegalStateException("Refreshing flag cache must be done on a worker thread.");
      paramObject = zzc;
      if (paramObject == null) {
        return zzd;
      }
    }
    try
    {
      paramObject = paramObject.zza();
      return paramObject;
    }
    catch (SecurityException paramObject)
    {
      for (;;) {}
    }
    catch (IllegalStateException paramObject)
    {
      for (;;) {}
    }
    return zzd;
    return zzd;
    paramObject = finally;
    throw paramObject;
    paramObject = finally;
    throw paramObject;
  }
  
  public final String zzb()
  {
    return zzb;
  }
}
