package com.google.android.gms.measurement.internal;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.Signature;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.util.Clock;
import com.google.android.gms.common.wrappers.PackageManagerWrapper;
import com.google.android.gms.common.wrappers.Wrappers;
import com.google.android.gms.internal.measurement.zzoz;
import com.google.android.gms.internal.measurement.zzpf;
import java.lang.reflect.Method;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.SecureRandom;
import java.util.List;
import java.util.Locale;
import org.checkerframework.checker.nullness.qual.EnsuresNonNull;

public final class zzef
  extends zzf
{
  private String zza;
  private String zzb;
  private int zzc;
  private String zzd;
  private String zze;
  private long zzf;
  private final long zzg;
  private List zzh;
  private String zzi;
  private int zzj;
  private String zzk;
  private String zzl;
  private String zzm;
  private long zzn = 0L;
  private String zzo = null;
  
  zzef(zzfy paramZzfy, long paramLong)
  {
    super(paramZzfy);
    zzg = paramLong;
  }
  
  @EnsuresNonNull({"appId", "appStore", "appName", "gmpAppId", "gaAppId"})
  protected final void zzd()
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: can not merge I and Z\n\tat com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.copyTypes(TypeTransformer.java:311)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.fixTypes(TypeTransformer.java:226)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:207)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\n");
  }
  
  protected final boolean zzf()
  {
    return true;
  }
  
  final int zzh()
  {
    zza();
    return zzj;
  }
  
  final int zzi()
  {
    zza();
    return zzc;
  }
  
  final zzq zzj(String paramString)
  {
    zzg();
    String str1 = zzl();
    String str2 = zzm();
    zza();
    String str3 = zzb;
    zza();
    long l3 = zzc;
    zza();
    Preconditions.checkNotNull(zzd);
    String str4 = zzd;
    zzs.zzf().zzh();
    zza();
    zzg();
    long l2 = zzf;
    long l1 = l2;
    Object localObject3;
    if (l2 == 0L)
    {
      localObject1 = zzs.zzv();
      localObject3 = zzs.zzau();
      str5 = zzs.zzau().getPackageName();
      ((zzgr)localObject1).zzg();
      Preconditions.checkNotNull(localObject3);
      Preconditions.checkNotEmpty(str5);
      localObject4 = ((Context)localObject3).getPackageManager();
      MessageDigest localMessageDigest = zzlh.zzF();
      l1 = -1L;
      if (localMessageDigest == null) {
        zzs.zzay().zzd().zza("Could not get MD5 instance");
      }
      for (;;)
      {
        break label296;
        if (localObject4 != null) {
          try
          {
            if (!((zzlh)localObject1).zzag((Context)localObject3, str5))
            {
              localObject3 = packageManagergetPackageInfozzs.zzau().getPackageName(), 64).signatures;
              if ((localObject3 != null) && (localObject3.length > 0)) {
                l1 = zzlh.zzp(localMessageDigest.digest(localObject3[0].toByteArray()));
              } else {
                zzs.zzay().zzk().zza("Could not get signatures");
              }
            }
            else
            {
              l1 = 0L;
            }
          }
          catch (PackageManager.NameNotFoundException localNameNotFoundException)
          {
            zzs.zzay().zzd().zzb("Package name not found", localNameNotFoundException);
          }
        }
      }
      l1 = 0L;
      label296:
      zzf = l1;
    }
    boolean bool1 = zzs.zzJ();
    boolean bool2 = zzs.zzm().zzk;
    zzg();
    if (!zzs.zzJ()) {}
    for (;;)
    {
      localObject1 = null;
      break label516;
      zzpf.zzc();
      if (!zzs.zzf().zzs(null, zzeb.zzaa)) {
        break;
      }
      zzs.zzay().zzj().zza("Disabled IID for tests.");
    }
    for (;;)
    {
      try
      {
        localObject1 = zzs.zzau().getClassLoader().loadClass("com.google.firebase.analytics.FirebaseAnalytics");
        if (localObject1 != null) {}
      }
      catch (ClassNotFoundException localClassNotFoundException)
      {
        Object localObject2;
        int i;
        boolean bool3;
        boolean bool4;
        long l4;
        String str6;
        String str7;
        long l5;
        long l6;
        continue;
      }
      try
      {
        localObject2 = ((Class)localObject1).getDeclaredMethod("getInstance", new Class[] { Context.class }).invoke(null, new Object[] { zzs.zzau() });
        if (localObject2 != null) {}
      }
      catch (Exception localException1)
      {
        continue;
      }
      try
      {
        localObject1 = (String)((Class)localObject1).getDeclaredMethod("getFirebaseInstanceId", new Class[0]).invoke(localObject2, new Object[0]);
      }
      catch (Exception localException2) {}
    }
    zzs.zzay().zzl().zza("Failed to retrieve Firebase Instance Id");
    break label513;
    zzs.zzay().zzm().zza("Failed to obtain Firebase Analytics instance");
    label513:
    Object localObject1 = null;
    label516:
    localObject2 = zzs;
    l2 = zzmzzc.zza();
    if (l2 == 0L) {
      l2 = zzc;
    } else {
      l2 = Math.min(zzc, l2);
    }
    zza();
    i = zzj;
    bool3 = zzs.zzf().zzr();
    localObject2 = zzs.zzm();
    ((zzgr)localObject2).zzg();
    bool4 = ((zzfd)localObject2).zza().getBoolean("deferred_analytics_collection", false);
    zza();
    String str5 = zzl;
    localObject2 = zzs.zzf().zzk("google_analytics_default_allow_ad_personalization_signals");
    if (localObject2 == null) {
      localObject2 = null;
    } else {
      localObject2 = Boolean.valueOf(((Boolean)localObject2).booleanValue() ^ true);
    }
    l4 = zzg;
    Object localObject4 = zzh;
    str6 = zzs.zzm().zzc().zzh();
    if (zzi == null) {
      if (zzs.zzf().zzs(null, zzeb.zzax)) {
        zzi = zzs.zzv().zzC();
      } else {
        zzi = "";
      }
    }
    str7 = zzi;
    zzoz.zzc();
    if (zzs.zzf().zzs(null, zzeb.zzas))
    {
      zzg();
      if (zzn != 0L)
      {
        l5 = zzs.zzav().currentTimeMillis();
        l6 = zzn;
        if ((zzm != null) && (l5 - l6 > 86400000L) && (zzo == null)) {
          zzo();
        }
      }
      if (zzm == null) {
        zzo();
      }
      localObject3 = zzm;
    }
    else
    {
      localObject3 = null;
    }
    return new zzq(str1, str2, str3, l3, str4, 73000L, l1, paramString, bool1, bool2 ^ true, (String)localObject1, 0L, l2, i, bool3, bool4, str5, (Boolean)localObject2, l4, (List)localObject4, null, str6, str7, (String)localObject3);
  }
  
  final String zzk()
  {
    zza();
    return zzl;
  }
  
  final String zzl()
  {
    zza();
    Preconditions.checkNotNull(zza);
    return zza;
  }
  
  final String zzm()
  {
    zzg();
    zza();
    Preconditions.checkNotNull(zzk);
    return zzk;
  }
  
  final List zzn()
  {
    return zzh;
  }
  
  final void zzo()
  {
    zzg();
    Object localObject;
    if (!zzs.zzm().zzc().zzi(zzah.zzb))
    {
      zzs.zzay().zzc().zza("Analytics Storage consent is not granted");
      localObject = null;
    }
    else
    {
      localObject = new byte[16];
      zzs.zzv().zzG().nextBytes((byte[])localObject);
      localObject = String.format(Locale.US, "%032x", new Object[] { new BigInteger(1, (byte[])localObject) });
    }
    zzem localZzem = zzs.zzay().zzc();
    String str;
    if (localObject == null) {
      str = "null";
    } else {
      str = "not null";
    }
    localZzem.zza(String.format("Resetting session stitching token to %s", new Object[] { str }));
    zzm = ((String)localObject);
    zzn = zzs.zzav().currentTimeMillis();
  }
  
  final boolean zzp(String paramString)
  {
    String str = zzo;
    boolean bool2 = false;
    boolean bool1 = bool2;
    if (str != null)
    {
      bool1 = bool2;
      if (!str.equals(paramString)) {
        bool1 = true;
      }
    }
    zzo = paramString;
    return bool1;
  }
}
