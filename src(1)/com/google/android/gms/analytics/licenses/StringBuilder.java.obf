package com.google.android.gms.oss.licenses;

import android.content.Context;
import android.os.DeadObjectException;
import android.os.Looper;
import android.os.RemoteException;
import com.google.android.gms.common.api.GoogleApiClient.ConnectionCallbacks;
import com.google.android.gms.common.api.GoogleApiClient.OnConnectionFailedListener;
import com.google.android.gms.common.internal.BaseGmsClient;
import com.google.android.gms.common.internal.ClientSettings;
import com.google.android.gms.common.internal.GmsClient;
import com.google.android.gms.internal.oss_licenses.zzc;
import java.util.List;

public final class zzn
  extends GmsClient<zza>
{
  public zzn(Context paramContext, Looper paramLooper, ClientSettings paramClientSettings, GoogleApiClient.ConnectionCallbacks paramConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener paramOnConnectionFailedListener)
  {
    super(paramContext, paramLooper, 185, paramClientSettings, paramConnectionCallbacks, paramOnConnectionFailedListener);
  }
  
  private final zza zzc()
  {
    try
    {
      zza localZza = (zza)super.getService();
      return localZza;
    }
    catch (DeadObjectException|IllegalStateException localDeadObjectException)
    {
      for (;;) {}
    }
    return null;
  }
  
  protected final boolean enableLocalFallback()
  {
    return true;
  }
  
  public final int getMinApkVersion()
  {
    return 12600000;
  }
  
  protected final String getServiceDescriptor()
  {
    return "com.google.android.gms.oss.licenses.IOSSLicenseService";
  }
  
  protected final String getStartServiceAction()
  {
    return "com.google.android.gms.oss.licenses.service.START";
  }
  
  public final String zza(zzc paramZzc)
    throws RemoteException
  {
    try
    {
      zza localZza = zzc();
      if (localZza != null)
      {
        paramZzc = localZza.zzc(paramZzc.toString());
        return paramZzc;
      }
      throw new RemoteException("no service for getLicenseDetail call");
    }
    finally {}
  }
  
  public final String zza(String paramString)
    throws RemoteException
  {
    try
    {
      zza localZza = zzc();
      if (localZza != null)
      {
        paramString = localZza.zza(paramString);
        return paramString;
      }
      throw new RemoteException("no service for getListLayoutPackage call");
    }
    finally {}
  }
  
  public final List<zzc> zza(List<zzc> paramList)
    throws RemoteException
  {
    try
    {
      zza localZza = zzc();
      if (localZza != null)
      {
        paramList = localZza.zza(paramList);
        return paramList;
      }
      throw new RemoteException("no service for getLicenseList call");
    }
    finally {}
  }
  
  public final String zzb(String paramString)
    throws RemoteException
  {
    try
    {
      zza localZza = zzc();
      if (localZza != null)
      {
        paramString = localZza.zzb(paramString);
        return paramString;
      }
      throw new RemoteException("no service for getLicenseLayoutPackage call");
    }
    finally {}
  }
}
