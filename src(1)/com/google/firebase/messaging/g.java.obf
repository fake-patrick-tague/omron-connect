package com.google.firebase.messaging;

import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.Resources;
import android.content.res.Resources.NotFoundException;
import android.graphics.Color;
import android.graphics.drawable.AdaptiveIconDrawable;
import android.media.RingtoneManager;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.SystemClock;
import android.text.TextUtils;
import android.util.Log;
import androidx.core.app.m.c;
import androidx.core.app.m.e;
import androidx.core.content.a;
import java.util.concurrent.atomic.AtomicInteger;

public final class h0
{
  private static final AtomicInteger a = new AtomicInteger((int)SystemClock.elapsedRealtime());
  
  private static PendingIntent a(Context paramContext, s0 paramS0, String paramString, PackageManager paramPackageManager)
  {
    paramString = f(paramString, paramS0, paramPackageManager);
    if (paramString == null) {
      return null;
    }
    paramString.addFlags(67108864);
    paramString.putExtras(paramS0.y());
    if (q(paramS0)) {
      paramString.putExtra("gcm.n.analytics_data", paramS0.x());
    }
    return PendingIntent.getActivity(paramContext, g(), paramString, l(1073741824));
  }
  
  private static PendingIntent b(Context paramContext1, Context paramContext2, s0 paramS0)
  {
    if (!q(paramS0)) {
      return null;
    }
    return c(paramContext1, paramContext2, new Intent("com.google.firebase.messaging.NOTIFICATION_DISMISS").putExtras(paramS0.x()));
  }
  
  private static PendingIntent c(Context paramContext1, Context paramContext2, Intent paramIntent)
  {
    return PendingIntent.getBroadcast(paramContext1, g(), new Intent("com.google.firebase.MESSAGING_EVENT").setComponent(new ComponentName(paramContext2, "com.google.firebase.iid.FirebaseInstanceIdReceiver")).putExtra("wrapped_intent", paramIntent), l(1073741824));
  }
  
  public static a d(Context paramContext1, Context paramContext2, s0 paramS0, String paramString, Bundle paramBundle)
  {
    String str1 = paramContext2.getPackageName();
    Object localObject = paramContext2.getResources();
    PackageManager localPackageManager = paramContext2.getPackageManager();
    paramString = new m.e(paramContext2, paramString);
    String str2 = paramS0.n((Resources)localObject, str1, "gcm.n.title");
    if (!TextUtils.isEmpty(str2)) {
      paramString.s(str2);
    }
    str2 = paramS0.n((Resources)localObject, str1, "gcm.n.body");
    if (!TextUtils.isEmpty(str2))
    {
      paramString.r(str2);
      paramString.J(new m.c().a(str2));
    }
    paramString.H(m(localPackageManager, (Resources)localObject, str1, paramS0.p("gcm.n.icon"), paramBundle));
    localObject = n(str1, paramS0, (Resources)localObject);
    if (localObject != null) {
      paramString.I((Uri)localObject);
    }
    paramString.q(a(paramContext1, paramS0, str1, localPackageManager));
    paramContext1 = b(paramContext1, paramContext2, paramS0);
    if (paramContext1 != null) {
      paramString.w(paramContext1);
    }
    paramContext1 = h(paramContext2, paramS0.p("gcm.n.color"), paramBundle);
    if (paramContext1 != null) {
      paramString.p(paramContext1.intValue());
    }
    paramString.m(paramS0.a("gcm.n.sticky") ^ true);
    paramString.A(paramS0.a("gcm.n.local_only"));
    paramContext1 = paramS0.p("gcm.n.ticker");
    if (paramContext1 != null) {
      paramString.L(paramContext1);
    }
    paramContext1 = paramS0.m();
    if (paramContext1 != null) {
      paramString.D(paramContext1.intValue());
    }
    paramContext1 = paramS0.r();
    if (paramContext1 != null) {
      paramString.N(paramContext1.intValue());
    }
    paramContext1 = paramS0.l();
    if (paramContext1 != null) {
      paramString.B(paramContext1.intValue());
    }
    paramContext1 = paramS0.j("gcm.n.event_time");
    if (paramContext1 != null)
    {
      paramString.G(true);
      paramString.O(paramContext1.longValue());
    }
    paramContext1 = paramS0.q();
    if (paramContext1 != null) {
      paramString.M(paramContext1);
    }
    paramContext1 = paramS0.e();
    if (paramContext1 != null) {
      paramString.z(paramContext1[0], paramContext1[1], paramContext1[2]);
    }
    paramString.v(i(paramS0));
    return new a(paramString, o(paramS0), 0);
  }
  
  static a e(Context paramContext, s0 paramS0)
  {
    Bundle localBundle = j(paramContext.getPackageManager(), paramContext.getPackageName());
    return d(paramContext, paramContext, paramS0, k(paramContext, paramS0.k(), localBundle), localBundle);
  }
  
  private static Intent f(String paramString, s0 paramS0, PackageManager paramPackageManager)
  {
    String str = paramS0.p("gcm.n.click_action");
    if (!TextUtils.isEmpty(str))
    {
      paramS0 = new Intent(str);
      paramS0.setPackage(paramString);
      paramS0.setFlags(268435456);
      return paramS0;
    }
    paramS0 = paramS0.f();
    if (paramS0 != null)
    {
      paramPackageManager = new Intent("android.intent.action.VIEW");
      paramPackageManager.setPackage(paramString);
      paramPackageManager.setData(paramS0);
      return paramPackageManager;
    }
    paramString = paramPackageManager.getLaunchIntentForPackage(paramString);
    if (paramString == null) {
      Log.w("FirebaseMessaging", "No activity found to launch app");
    }
    return paramString;
  }
  
  private static int g()
  {
    return a.incrementAndGet();
  }
  
  private static Integer h(Context paramContext, String paramString, Bundle paramBundle)
  {
    if (Build.VERSION.SDK_INT < 21) {
      return null;
    }
    if (!TextUtils.isEmpty(paramString)) {}
    try
    {
      i = Color.parseColor(paramString);
      return Integer.valueOf(i);
    }
    catch (IllegalArgumentException localIllegalArgumentException)
    {
      int i;
      StringBuilder localStringBuilder;
      for (;;) {}
    }
    localStringBuilder = new StringBuilder();
    localStringBuilder.append("Color is invalid: ");
    localStringBuilder.append(paramString);
    localStringBuilder.append(". Notification will use default color.");
    Log.w("FirebaseMessaging", localStringBuilder.toString());
    i = paramBundle.getInt("com.google.firebase.messaging.default_notification_color", 0);
    if (i != 0) {}
    try
    {
      i = a.d(paramContext, i);
      return Integer.valueOf(i);
    }
    catch (Resources.NotFoundException paramContext)
    {
      for (;;) {}
    }
    Log.w("FirebaseMessaging", "Cannot find the color resource referenced in AndroidManifest.");
    return null;
  }
  
  private static int i(s0 paramS0)
  {
    if (paramS0.a("gcm.n.default_sound")) {
      j = 1;
    } else {
      j = 0;
    }
    int i = j;
    if (paramS0.a("gcm.n.default_vibrate_timings")) {
      i = j | 0x2;
    }
    int j = i;
    if (paramS0.a("gcm.n.default_light_settings")) {
      j = i | 0x4;
    }
    return j;
  }
  
  private static Bundle j(PackageManager paramPackageManager, String paramString)
  {
    try
    {
      paramPackageManager = paramPackageManager.getApplicationInfo(paramString, 128);
      if (paramPackageManager != null)
      {
        paramPackageManager = metaData;
        if (paramPackageManager != null) {
          return paramPackageManager;
        }
      }
    }
    catch (PackageManager.NameNotFoundException paramPackageManager)
    {
      paramString = new StringBuilder();
      paramString.append("Couldn't get own application info: ");
      paramString.append(paramPackageManager);
      Log.w("FirebaseMessaging", paramString.toString());
    }
    return Bundle.EMPTY;
  }
  
  public static String k(Context paramContext, String paramString, Bundle paramBundle)
  {
    if (Build.VERSION.SDK_INT < 26) {
      return null;
    }
    try
    {
      int i = getPackageManagergetApplicationInfogetPackageName0targetSdkVersion;
      if (i < 26) {
        return null;
      }
      NotificationManager localNotificationManager = (NotificationManager)paramContext.getSystemService(NotificationManager.class);
      if (!TextUtils.isEmpty(paramString))
      {
        if (localNotificationManager.getNotificationChannel(paramString) != null) {
          return paramString;
        }
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append("Notification Channel requested (");
        localStringBuilder.append(paramString);
        localStringBuilder.append(") has not been created by the app. Manifest configuration, or default, value will be used.");
        Log.w("FirebaseMessaging", localStringBuilder.toString());
      }
      paramString = paramBundle.getString("com.google.firebase.messaging.default_notification_channel_id");
      if (!TextUtils.isEmpty(paramString))
      {
        if (localNotificationManager.getNotificationChannel(paramString) != null) {
          return paramString;
        }
        Log.w("FirebaseMessaging", "Notification Channel set in AndroidManifest.xml has not been created by the app. Default value will be used.");
      }
      else
      {
        Log.w("FirebaseMessaging", "Missing Default Notification Channel metadata in AndroidManifest. Default value will be used.");
      }
      if (localNotificationManager.getNotificationChannel("fcm_fallback_notification_channel") == null)
      {
        i = paramContext.getResources().getIdentifier("fcm_fallback_notification_channel_label", "string", paramContext.getPackageName());
        if (i == 0)
        {
          Log.e("FirebaseMessaging", "String resource \"fcm_fallback_notification_channel_label\" is not found. Using default string channel name.");
          paramContext = "Misc";
        }
        else
        {
          paramContext = paramContext.getString(i);
        }
        localNotificationManager.createNotificationChannel(new NotificationChannel("fcm_fallback_notification_channel", paramContext, 3));
      }
      return "fcm_fallback_notification_channel";
    }
    catch (PackageManager.NameNotFoundException paramContext) {}
    return null;
  }
  
  private static int l(int paramInt)
  {
    int i = paramInt;
    if (Build.VERSION.SDK_INT >= 23) {
      i = paramInt | 0x4000000;
    }
    return i;
  }
  
  private static int m(PackageManager paramPackageManager, Resources paramResources, String paramString1, String paramString2, Bundle paramBundle)
  {
    int i;
    if (!TextUtils.isEmpty(paramString2))
    {
      i = paramResources.getIdentifier(paramString2, "drawable", paramString1);
      if ((i != 0) && (p(paramResources, i))) {
        return i;
      }
      i = paramResources.getIdentifier(paramString2, "mipmap", paramString1);
      if ((i != 0) && (p(paramResources, i))) {
        return i;
      }
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("Icon resource ");
      localStringBuilder.append(paramString2);
      localStringBuilder.append(" not found. Notification will use default icon.");
      Log.w("FirebaseMessaging", localStringBuilder.toString());
    }
    int j = paramBundle.getInt("com.google.firebase.messaging.default_notification_icon", 0);
    if (j != 0)
    {
      i = j;
      if (p(paramResources, j)) {}
    }
    else
    {
      try
      {
        i = getApplicationInfo0icon;
      }
      catch (PackageManager.NameNotFoundException paramPackageManager)
      {
        paramString1 = new StringBuilder();
        paramString1.append("Couldn't get own application info: ");
        paramString1.append(paramPackageManager);
        Log.w("FirebaseMessaging", paramString1.toString());
        i = j;
      }
    }
    if (i != 0)
    {
      j = i;
      if (p(paramResources, i)) {}
    }
    else
    {
      j = 17301651;
    }
    return j;
  }
  
  private static Uri n(String paramString, s0 paramS0, Resources paramResources)
  {
    paramS0 = paramS0.o();
    if (TextUtils.isEmpty(paramS0)) {
      return null;
    }
    if ((!"default".equals(paramS0)) && (paramResources.getIdentifier(paramS0, "raw", paramString) != 0))
    {
      paramResources = new StringBuilder();
      paramResources.append("android.resource://");
      paramResources.append(paramString);
      paramResources.append("/raw/");
      paramResources.append(paramS0);
      return Uri.parse(paramResources.toString());
    }
    return RingtoneManager.getDefaultUri(2);
  }
  
  private static String o(s0 paramS0)
  {
    paramS0 = paramS0.p("gcm.n.tag");
    if (!TextUtils.isEmpty(paramS0)) {
      return paramS0;
    }
    paramS0 = new StringBuilder();
    paramS0.append("FCM-Notification:");
    paramS0.append(SystemClock.uptimeMillis());
    return paramS0.toString();
  }
  
  private static boolean p(Resources paramResources, int paramInt)
  {
    if (Build.VERSION.SDK_INT != 26) {
      return true;
    }
    try
    {
      if ((paramResources.getDrawable(paramInt, null) instanceof AdaptiveIconDrawable))
      {
        paramResources = new StringBuilder();
        paramResources.append("Adaptive icons cannot be used in notifications. Ignoring icon id: ");
        paramResources.append(paramInt);
        Log.e("FirebaseMessaging", paramResources.toString());
        return false;
      }
      return true;
    }
    catch (Resources.NotFoundException paramResources)
    {
      for (;;) {}
    }
    paramResources = new StringBuilder();
    paramResources.append("Couldn't find resource ");
    paramResources.append(paramInt);
    paramResources.append(", treating it as an invalid icon");
    Log.e("FirebaseMessaging", paramResources.toString());
    return false;
  }
  
  static boolean q(s0 paramS0)
  {
    return paramS0.a("google.c.a.e");
  }
  
  public static class a
  {
    public final m.e a;
    public final String b;
    public final int c;
    
    a(m.e paramE, String paramString, int paramInt)
    {
      a = paramE;
      b = paramString;
      c = paramInt;
    }
  }
}
