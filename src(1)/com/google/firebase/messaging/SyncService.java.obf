package com.google.firebase.messaging;

import android.app.Service;
import android.content.Intent;
import android.os.Binder;
import android.os.IBinder;
import android.util.Log;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.tasks.Task;
import com.google.android.gms.tasks.TaskCompletionSource;
import com.google.android.gms.tasks.Tasks;
import java.util.concurrent.ExecutorService;

public abstract class k0
  extends Service
{
  private Binder binder;
  final ExecutorService executor = m0.d();
  private int lastStartId;
  private final Object lock = new Object();
  private int runningTasks = 0;
  
  public k0() {}
  
  private void finishTask(Intent arg1)
  {
    if (??? != null) {
      h1.b(???);
    }
    synchronized (lock)
    {
      int i = runningTasks - 1;
      runningTasks = i;
      if (i == 0) {
        stopSelfResultHook(lastStartId);
      }
      return;
    }
  }
  
  private Task<Void> processIntent(Intent paramIntent)
  {
    if (handleIntentOnMainThread(paramIntent)) {
      return Tasks.forResult(null);
    }
    TaskCompletionSource localTaskCompletionSource = new TaskCompletionSource();
    executor.execute(new c(this, paramIntent, localTaskCompletionSource));
    return localTaskCompletionSource.getTask();
  }
  
  protected abstract Intent getStartCommandIntent(Intent paramIntent);
  
  public abstract void handleIntent(Intent paramIntent);
  
  public boolean handleIntentOnMainThread(Intent paramIntent)
  {
    return false;
  }
  
  public final IBinder onBind(Intent paramIntent)
  {
    try
    {
      if (Log.isLoggable("EnhancedIntentService", 3)) {
        Log.d("EnhancedIntentService", "Service received bind request");
      }
      if (binder == null) {
        binder = new i1(new a());
      }
      paramIntent = binder;
      return paramIntent;
    }
    finally {}
  }
  
  public void onDestroy()
  {
    executor.shutdown();
    super.onDestroy();
  }
  
  public final int onStartCommand(Intent paramIntent, int paramInt1, int paramInt2)
  {
    synchronized (lock)
    {
      lastStartId = paramInt2;
      runningTasks += 1;
      ??? = getStartCommandIntent(paramIntent);
      if (??? == null)
      {
        finishTask(paramIntent);
        return 2;
      }
      ??? = processIntent((Intent)???);
      if (((Task)???).isComplete())
      {
        finishTask(paramIntent);
        return 2;
      }
      ((Task)???).addOnCompleteListener(w.b, new b(this, paramIntent));
      return 3;
    }
  }
  
  boolean stopSelfResultHook(int paramInt)
  {
    return stopSelfResult(paramInt);
  }
  
  class a
    implements i1.a
  {
    a() {}
    
    @KeepForSdk
    public Task<Void> a(Intent paramIntent)
    {
      return k0.this.processIntent(paramIntent);
    }
  }
}
