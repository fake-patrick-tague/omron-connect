package c.h.m;

import android.os.Build.VERSION;
import android.os.Handler;
import android.os.Handler.Callback;
import android.os.Looper;
import android.util.Log;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;

public final class g
{
  public static Handler a(Looper paramLooper)
  {
    int i = Build.VERSION.SDK_INT;
    if (i >= 28) {
      return a.a(paramLooper);
    }
    if (i >= 17)
    {
      try
      {
        Handler localHandler = (Handler)Handler.class.getDeclaredConstructor(new Class[] { Looper.class, Handler.Callback.class, Boolean.TYPE }).newInstance(new Object[] { paramLooper, null, Boolean.TRUE });
        return localHandler;
      }
      catch (InvocationTargetException paramLooper)
      {
        paramLooper = paramLooper.getCause();
        if (!(paramLooper instanceof RuntimeException))
        {
          if ((paramLooper instanceof Error)) {
            throw ((Error)paramLooper);
          }
          throw new RuntimeException(paramLooper);
        }
        throw ((RuntimeException)paramLooper);
      }
      catch (NoSuchMethodException localNoSuchMethodException) {}catch (InstantiationException localInstantiationException) {}catch (IllegalAccessException localIllegalAccessException) {}
      Log.w("HandlerCompat", "Unable to invoke Handler(Looper, Callback, boolean) constructor", localIllegalAccessException);
    }
    return new Handler(paramLooper);
  }
  
  private static class a
  {
    public static Handler a(Looper paramLooper)
    {
      return Handler.createAsync(paramLooper);
    }
  }
}
